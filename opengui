"if not _G.require then\r\n\t_G.require = require\r\nend\r\n\r\n--// API References\r\nlocal GUIData = (function()\r\n\t-- Variables\r\n\t_V = 1.11\r\n\t\r\n\tlocal screenGui = (script:FindFirstChild(\"ScreenGui\")) or game:GetObjects(\"rbxassetid://2718157603\")[1]:FindFirstChild(\"ScreenGui\", true)\r\n\t  local Container = screenGui.Frame\r\n\t    local Opt = Container.OptionsFrame\r\n\t    local Checkbox = Opt.Checkbox\r\n\t    local Color = Opt.Color\r\n\t    local Frame = Opt.Frame\r\n\t    local Execute = Opt.Execute\r\n\t    local Mode = Opt.Mode\r\n\t    local Number = Opt.Number\r\n\t    local Toggle = Opt.Toggle\r\n\t  local Mods = screenGui.Mods\r\n\t    local ModLabel = Mods.Example\r\n\t\r\n\tlocal TextService = game:GetService(\"TextService\")\r\n\tlocal UserInputService = game:GetService(\"UserInputService\")\r\n\tlocal HttpService = game:GetService(\"HttpService\")\r\n\tlocal Player = game:GetService(\"Players\").LocalPlayer\r\n\t  local Mouse = Player:GetMouse()\r\n\t\r\n\tpcall(function()\r\n\t\tscreenGui.Parent = game:GetService(\"CoreGui\")\r\n\tend)\r\n\t\r\n\tContainer.Parent = nil\r\n\tCheckbox.Parent = nil\r\n\tColor.Parent = nil\r\n\tFrame.Parent = nil\r\n\tExecute.Parent = nil\r\n\tMode.Parent = nil\r\n\tNumber.Parent = nil\r\n\tToggle.Parent = nil\r\n\tModLabel.Parent = nil\r\n\t\r\n\tlocal settingsArray = {{Object = screenGui},{}}\r\n\tlocal saveData = {Options = {}, Hotkeys = {}}\r\n\t\r\n\tlocal hotkeyFunctions = {}\r\n\tlocal gui = {}\r\n\t\r\n\t-- Save Functions\r\n\tlocal writefile = writefile or function() end\r\n\tlocal function Save()\r\n\t\tlocal JSONData = HttpService:JSONEncode(saveData)\r\n\t\twritefile(\"OpenGui.txt\", JSONData)\r\n\tend\r\n\t\r\n\t-- Color Functions\r\n\tlocal color = {}\r\n\tlocal colors = {\r\n\t\tTextDisabled = Color3.fromRGB(200, 200, 200),\r\n\t\tTextEnabled = Color3.fromRGB(255, 255, 255),\r\n\t}\r\n\t\r\n\tlocal Colors = {\r\n\t\tColor3.fromRGB(255, 73, 73),\r\n\t\tColor3.fromRGB(255, 161, 66),\r\n\t\tColor3.fromRGB(255, 233, 62),\r\n\t\tColor3.fromRGB(137, 255, 64),\r\n\t\tColor3.fromRGB(64, 255, 140),\r\n\t\tColor3.fromRGB(66, 252, 255),\r\n\t\tColor3.fromRGB(64, 147, 255),\r\n\t\tColor3.fromRGB(255, 93, 253),\r\n\t\tColor3.fromRGB(195, 110, 255),\r\n\t\tColor3.fromRGB(255, 90, 134),\r\n\t\tColor3.fromRGB(255, 255, 255),\r\n\t\tColor3.fromRGB(209, 209, 209),\r\n\t}\r\n\t\r\n\tlocal function h2rgb(m1, m2, h)\r\n\t\tif h\u003C0 then h = h+1 end\r\n\t\tif h>1 then h = h-1 end\r\n\t\tif h*6\u003C1 then\r\n\t\t\treturn m1+(m2-m1)*h*6\r\n\t\telseif h*2\u003C1 then\r\n\t\t\treturn m2\r\n\t\telseif h*3\u003C2 then\r\n\t\t\treturn m1+(m2-m1)*(2/3-h)*6\r\n\t\telse\r\n\t\t\treturn m1\r\n\t\tend\r\n\tend\r\n\t\r\n\tfunction color:rgbToHsv(r, g, b)\r\n\t\tlocal a = 0\r\n\t\tr, g, b, a = r / 255, g / 255, b / 255, a / 255\r\n\t\tlocal max, min = math.max(r, g, b), math.min(r, g, b)\r\n\t\tlocal h, s, v\r\n\t\tv = max\r\n\t\r\n\t\tlocal d = max - min\r\n\t\tif max == 0 then s = 0 else s = d / max end\r\n\t\r\n\t\tif max == min then\r\n\t\t\th = 0 -- achromatic\r\n\t\telse\r\n\t\t\tif max == r then\r\n\t\t\th = (g - b) / d\r\n\t\t\tif g \u003C b then h = h + 6 end\r\n\t\t\telseif max == g then h = (b - r) / d + 2\r\n\t\t\telseif max == b then h = (r - g) / d + 4\r\n\t\t\tend\r\n\t\t\th = h / 6\r\n\t\tend\r\n\t\r\n\t\treturn h, s, v\r\n\tend\r\n\t\r\n\tfunction color:hslToRgb(h, s, L)\r\n\t\th = h / 360\r\n\t\tlocal m2 = L \u003C= .5 and L*(s+1) or L+s-L*s\r\n\t\tlocal m1 = L*2-m2\r\n\t\treturn\r\n\t\t\th2rgb(m1, m2, h+1/3),\r\n\t\t\th2rgb(m1, m2, h),\r\n\t\t\th2rgb(m1, m2, h-1/3)\r\n\tend\r\n\t\r\n\tfunction color:rgbToHsl(r, g, b)\r\n\t\tlocal min = math.min(r, g, b)\r\n\t\tlocal max = math.max(r, g, b)\r\n\t\tlocal delta = max - min\r\n\t\r\n\t\tlocal h, s, l = 0, 0, (min + max) / 2\r\n\t\r\n\t\tif l > 0 and l \u003C 0.5 then s = delta / (max + min) end\r\n\t\tif l >= 0.5 and l \u003C 1 then s = delta / (2 - max - min) end\r\n\t\r\n\t\tif delta > 0 then\r\n\t\t\tif max == r and max ~= g then h = h + (g-b) / delta end\r\n\t\t\tif max == g and max ~= b then h = h + 2 + (b-r) / delta end\r\n\t\t\tif max == b and max ~= r then h = h + 4 + (r-g) / delta end\r\n\t\t\th = h / 6\r\n\t\tend\r\n\t\r\n\t\tif h \u003C 0 then h = h + 1 end\r\n\t\tif h > 1 then h = h - 1 end\r\n\t\r\n\t\treturn h * 360, s, l\r\n\tend\r\n\t\r\n\tfunction color:adjustLightness(color3, amount)\r\n\t\tlocal h, s, l = self:rgbToHsl(color3.r, color3.g, color3.b)\r\n\t\treturn Color3.new(self:hslToRgb(h, s, l + amount))\r\n\tend\r\n\t\r\n\t-- UI Functions\r\n\tfunction gui.tween(object,style,direction,t,goal)\r\n\t    local tweenservice = game:GetService(\"TweenService\")\r\n\t    local tweenInfo = TweenInfo.new(t,Enum.EasingStyle[style],Enum.EasingDirection[direction])\r\n\t    local tween = tweenservice:Create(object,tweenInfo,goal)\r\n\t\ttween.Completed:Connect(function()\r\n\t\t\ttween:Destroy()\r\n\t\tend)\r\n\t    tween:Play()\r\n\t    return tween\r\n\tend\r\n\t\r\n\tfunction gui:makeDraggable(ui, callback)\r\n\t\tlocal UserInputService = game:GetService(\"UserInputService\")\r\n\t\t\r\n\t\tlocal dragging\r\n\t\tlocal dragInput\r\n\t\tlocal dragStart\r\n\t\tlocal startPos\r\n\t\t\r\n\t\tlocal function update(input)\r\n\t\t\tlocal delta = input.Position - dragStart\r\n\t\t\tui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)\r\n\t\t\t\r\n\t\t\tif callback then\r\n\t\t\t\tcallback(ui.Position.X.Offset, ui.Position.Y.Offset)\r\n\t\t\tend\r\n\t\tend\r\n\t\t\r\n\t\tui.InputBegan:Connect(function(input)\r\n\t\t\tif input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then\r\n\t\t\t\tdragging = true\r\n\t\t\t\tdragStart = input.Position\r\n\t\t\t\tstartPos = ui.Position\r\n\t\t\t\t\r\n\t\t\t\tinput.Changed:Connect(function()\r\n\t\t\t\t\tif input.UserInputState == Enum.UserInputState.End then\r\n\t\t\t\t\t\tdragging = false\r\n\t\t\t\t\tend\r\n\t\t\t\tend)\r\n\t\t\tend\r\n\t\tend)\r\n\t\t\r\n\t\tui.InputChanged:Connect(function(input)\r\n\t\t\tif input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then\r\n\t\t\t\tdragInput = input\r\n\t\t\tend\r\n\t\tend)\r\n\t\t\r\n\t\tUserInputService.InputChanged:Connect(function(input)\r\n\t\t\tif input == dragInput and dragging then\r\n\t\t\t\tupdate(input)\r\n\t\t\tend\r\n\t\tend)\r\n\tend\r\n\t\r\n\tfunction gui:unpack(data, type)\r\n\t\tif data == nil then return end\r\n\t\tif type == \"UDim2\" then\r\n\t\t\treturn data and UDim2.new(data[1], data[2], data[3], data[4])\r\n\t\telseif type == \"boolean\" then\r\n\t\t\treturn data == 1 and true or false\r\n\t\telseif type == \"Color3\" then\r\n\t\t\treturn Color3.new(data[1], data[2], data[3])\r\n\t\tend\r\n\t\treturn data\r\n\tend\r\n\t\r\n\tfunction gui:pack(data)\r\n\t\tif typeof(data) == \"UDim2\" then\r\n\t\t\treturn {data.X.Scale, data.X.Offset, data.Y.Scale, data.Y.Offset}\r\n\t\telseif typeof(data) == \"boolean\" then\r\n\t\t\treturn data and 1 or 0\r\n\t\telseif typeof(data) == \"Color3\" then\r\n\t\t\treturn {data.r, data.g, data.b}\r\n\t\tend\r\n\t\treturn data\r\n\tend\r\n\t\r\n\tfunction gui:getn(array)\r\n\t\tlocal n = 0\r\n\t\tfor _, v in pairs(array) do\r\n\t\t\tn = n + 1\r\n\t\tend\r\n\t\treturn n\r\n\tend\r\n\t\r\n\tfunction gui:setText(textLabel, text)\r\n\t\ttext = tostring(text)\r\n\t\ttextLabel.Text = text\r\n\t\tif textLabel:FindFirstChild(\"Opaque\") then\r\n\t\t\ttextLabel.Opaque.Text = text\r\n\t\tend\r\n\t\tif textLabel:FindFirstChild(\"Shadow\") then\r\n\t\t\ttextLabel.Shadow.Text = text\r\n\t\tend\r\n\tend\r\n\t\r\n\tfunction gui:onDoubleTap(guiObject, callback)\r\n\t\tlocal lastTap = tick()\r\n\t\tguiObject.InputBegan:Connect(function(input)\r\n\t\t\tif input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n\t\t\t\tif tick() - lastTap \u003C 0.25 then\r\n\t\t\t\t\tcallback()\r\n\t\t\t\tend\r\n\t\t\t\tlastTap = tick()\r\n\t\t\tend\r\n\t\tend)\r\n\tend\r\n\t\r\n\tlocal connections = {}\r\n\tfunction gui:connect(func)\r\n\t\ttable.insert(connections, func)\r\n\tend\r\n\t\r\n\tfunction gui:createList(guiObject, guiData)\r\n\t\tlocal ListLayout = guiObject.OptionsFrame.UIListLayout\r\n\t\tlocal Padding = guiObject.OptionsFrame.UIPadding\r\n\t\tguiObject.OptionsFrame.UIListLayout.Changed:Connect(function(Property)\r\n\t\t\tif Property == \"AbsoluteContentSize\" then\r\n\t\t\t\tguiData.ySize = ListLayout.AbsoluteContentSize.Y + 2 + Padding.PaddingTop.Offset + ListLayout.Padding.Offset * 2\r\n\t\t\tend\r\n\t\tend)\r\n\t\t\r\n\t\tgui:connect(function()\r\n\t\t\tif guiObject:FindFirstChild(\"Title\") then\r\n\t\t\t\tlocal yRes = Mouse.ViewSizeY\r\n\t\t\t\tlocal diff = yRes - (guiData.yPos + guiData.ySize)\r\n\t\t\t\tlocal difference = math.clamp(diff, 0, 5000)\r\n\t\t\t\tguiObject.OptionsFrame.CanvasSize = UDim2.new(1, 0, 1.001, guiData.ySize - 35)\r\n\t\t\t\t\r\n\t\t\t\tif guiData.Open then\r\n\t\t\t\t\tguiObject.OptionsFrame.Size = guiObject.OptionsFrame.Size:Lerp(UDim2.new(1, 0, 0, guiData.ySize + math.clamp(diff, -5000, 0)), 0.3)\r\n\t\t\t\telse\r\n\t\t\t\t\tguiObject.OptionsFrame.Size = guiObject.OptionsFrame.Size:Lerp(UDim2.new(1, 0, 0, 0), 0.3)\r\n\t\t\t\tend\r\n\t\t\t\t\r\n\t\t\t\tguiObject.Frame.Size = guiObject.OptionsFrame.Size\r\n\t\t\telse\r\n\t\t\t\tif guiData.Open then\r\n\t\t\t\t\tguiObject.Size = guiObject.Size:Lerp(UDim2.new(1, -8, 0, 35 + guiData.ySize), 0.3)\r\n\t\t\t\telse\r\n\t\t\t\t\tguiObject.Size = guiObject.Size:Lerp(UDim2.new(1, -8, 0, 35), 0.3)\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend)\r\n\t\t\r\n\t\tif guiObject:FindFirstChild(\"Dropdown\") then\r\n\t\t\tguiObject.Dropdown.Visible = false\r\n\t\t\tguiObject.Dropdown.MouseButton1Down:Connect(function()\r\n\t\t\t\tguiData.Open = not guiData.Open\r\n\t\t\t\tif guiData.Open then\r\n\t\t\t\t\tguiObject.Dropdown.Image = \"rbxassetid://3559638428\"\r\n\t\t\t\telse\r\n\t\t\t\t\tguiObject.Dropdown.Image = \"rbxassetid://3554238678\"\r\n\t\t\t\tend\r\n\t\t\tend)\r\n\t\telse\r\n\t\t\tgui:onDoubleTap(guiObject, function()\r\n\t\t\t\tguiData.Open = not guiData.Open\r\n\t\t\tend)\r\n\t\tend\r\n\tend\r\n\t\r\n\tfunction gui:textColorOnHover(guiObject, guiData)\r\n\t\tlocal hover = guiData.baseColor or guiObject.TextColor3\r\n\t\tlocal default = color:adjustLightness(hover, -0.075)\r\n\t\tlocal mdown = color:adjustLightness(hover, -0.15)\r\n\t\tlocal mouseIn\r\n\t\t\r\n\t\tlocal function update()\r\n\t\t\tif guiData.baseColor then\r\n\t\t\t\thover = guiData.baseColor or guiObject.TextColor3\r\n\t\t\t\tdefault = color:adjustLightness(hover, -0.075)\r\n\t\t\t\tmdown = color:adjustLightness(hover, -0.15)\r\n\t\t\tend\r\n\t\tend\r\n\t\t\r\n\t\tguiObject.MouseEnter:Connect(function()\r\n\t\t\tupdate()\r\n\t\t\tgui.tween(guiObject, \"Sine\", \"Out\", 0.25, {\r\n\t\t\t\tTextColor3 = hover;\r\n\t\t\t})\r\n\t\t\tmouseIn = true\r\n\t\tend)\r\n\t\t\r\n\t\tguiObject.MouseLeave:Connect(function()\r\n\t\t\tmouseIn = false\r\n\t\t\tupdate()\r\n\t\t\tgui.tween(guiObject, \"Sine\", \"Out\", 0.25, {\r\n\t\t\t\tTextColor3 = default;\r\n\t\t\t})\r\n\t\tend)\r\n\t\t\r\n\t\tguiObject.InputBegan:Connect(function(input)\r\n\t\t\tif input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n\t\t\t\tupdate()\r\n\t\t\t\tgui.tween(guiObject, \"Sine\", \"Out\", 0.25, {\r\n\t\t\t\t\tTextColor3 = mdown;\r\n\t\t\t\t})\r\n\t\t\tend\r\n\t\tend)\r\n\t\t\r\n\t\tguiObject.InputEnded:Connect(function(input)\r\n\t\t\tif input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n\t\t\t\tupdate()\r\n\t\t\t\tgui.tween(guiObject, \"Sine\", \"Out\", 0.25, {\r\n\t\t\t\t\tTextColor3 = mouseIn and hover or default;\r\n\t\t\t\t})\r\n\t\t\tend\r\n\t\tend)\r\n\t\t\r\n\t\tguiObject.TextColor3 = default\r\n\tend\r\n\t\r\n\tfunction gui:sliderXY(sliderFrame, inputObjects, callback)\r\n\t\tlocal inputDown = false\r\n\t\t\r\n\t\tlocal function refresh(c1, c2)\r\n\t\t\tlocal sliderX = sliderFrame.AbsolutePosition.X + sliderFrame.AbsoluteSize.X\r\n\t\t\tlocal sliderY = sliderFrame.AbsolutePosition.Y + sliderFrame.AbsoluteSize.Y\r\n\t\t\t\r\n\t\t\tlocal distX = sliderX - Mouse.X\r\n\t\t\tlocal distY = sliderY - Mouse.Y\r\n\t\t\t\r\n\t\t\tlocal deltaX = 1-math.clamp(distX / sliderFrame.AbsoluteSize.X, 0, 1)\r\n\t\t\tlocal deltaY = 1-math.clamp(distY / sliderFrame.AbsoluteSize.Y, 0, 1)\r\n\t\t\t\r\n\t\t\tif callback then\r\n\t\t\t\tcallback(c1 or deltaX, c2 or deltaY)\r\n\t\t\tend\r\n\t\tend\r\n\t\t\r\n\t\tfor _, obj in pairs(inputObjects) do\r\n\t\t\tobj.InputBegan:Connect(function(input)\r\n\t\t\t\tif input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n\t\t\t\t\tinputDown = true\r\n\t\t\t\t\trefresh()\r\n\t\t\t\tend\r\n\t\t\tend)\r\n\t\t\tobj.InputEnded:Connect(function(input)\r\n\t\t\t\tif input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n\t\t\t\t\tinputDown = false\r\n\t\t\t\t\trefresh()\r\n\t\t\t\tend\r\n\t\t\tend)\r\n\t\t\tobj.InputChanged:Connect(function(input)\r\n\t\t\t\tif input == nil or input.UserInputType == Enum.UserInputType.MouseMovement then\r\n\t\t\t\t\tif inputDown then\r\n\t\t\t\t\t\trefresh()\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend)\r\n\t\tend\r\n\t\t\r\n\t\treturn refresh\r\n\tend\r\n\t\r\n\tfunction gui:createSlider(sliderFrame, inputObjects, callback)\r\n\t\tlocal slider = sliderFrame.Value\r\n\t\tlocal inputDown = false\r\n\t\t\r\n\t\tlocal absPos = sliderFrame.AbsolutePosition.X + sliderFrame.AbsoluteSize.X\r\n\t\tlocal absSize = sliderFrame.AbsoluteSize.X\r\n\t\t\r\n\t\tlocal function refresh(custom)\r\n\t\t\tlocal mouseX = Mouse.X\r\n\t\t\tlocal sliderX = absPos\r\n\t\t\tlocal dist = sliderX - mouseX\r\n\t\t\tlocal delta = 1 - math.clamp(dist / absSize, 0, 1)\r\n\t\t\t\r\n\t\t\tif custom then\r\n\t\t\t\tdelta = custom\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tslider.Size = UDim2.new(delta, 0, 1, 0)\r\n\t\t\tif callback then\r\n\t\t\t\tcallback(delta, custom)\r\n\t\t\tend\r\n\t\tend\r\n\t\t\r\n\t\tfor _, obj in pairs(inputObjects) do\r\n\t\t\tobj.InputBegan:Connect(function(input)\r\n\t\t\t\tif input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n\t\t\t\t\tinputDown = true\r\n\t\t\t\t\tabsPos = sliderFrame.AbsolutePosition.X + sliderFrame.AbsoluteSize.X\r\n\t\t\t\t\tabsSize = sliderFrame.AbsoluteSize.X\r\n\t\t\t\t\trefresh()\r\n\t\t\t\tend\r\n\t\t\tend)\r\n\t\t\tobj.InputEnded:Connect(function(input)\r\n\t\t\t\tif input.UserInputType == Enum.UserInputType.MouseButton1 then\r\n\t\t\t\t\tinputDown = false\r\n\t\t\t\t\trefresh()\r\n\t\t\t\tend\r\n\t\t\tend)\r\n\t\t\tobj.InputChanged:Connect(function(input)\r\n\t\t\t\tif input == nil or input.UserInputType == Enum.UserInputType.MouseMovement then\r\n\t\t\t\t\tif inputDown then\r\n\t\t\t\t\t\trefresh()\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend)\r\n\t\tend\r\n\t\t\r\n\t\treturn refresh\r\n\tend\r\n\t\r\n\tfunction gui:textSize(txt, vSize)\r\n\t\treturn TextService:GetTextSize(txt.Text, txt.TextSize, txt.Font, vSize)\r\n\tend\r\n\t\r\n\tlocal currentHint = 0\r\n\t\r\n\tfunction gui:addHint(guiObject, hintText)\r\n\t\tlocal hintKey = math.random()\r\n\t\tguiObject.MouseEnter:Connect(function()\r\n\t\t\thintKey = math.random()\r\n\t\t\tcurrentHint = hintKey\r\n\t\t\t\r\n\t\t\twait(2)\r\n\t\t\t\r\n\t\t\tif currentHint == hintKey then\r\n\t\t\t\tgui:setText(screenGui.Hint, \" \" .. hintText .. \" \")\r\n\t\t\t\tlocal textSize = gui:textSize(screenGui.Hint, Vector2.new(2500, 500))\r\n\t\t\t\tscreenGui.Hint.Position = UDim2.new(0, Mouse.X, 0, Mouse.Y + 4)\r\n\t\t\t\tscreenGui.Hint.Size = UDim2.new(0, textSize.X, 0, textSize.Y)\r\n\t\t\t\tscreenGui.Hint.Visible = true\r\n\t\t\tend\r\n\t\tend)\r\n\t\t\r\n\t\tguiObject.MouseLeave:Connect(function()\r\n\t\t\thintKey = math.random()\r\n\t\tend)\r\n\t\t\r\n\t\tMouse.Move:Connect(function()\r\n\t\t\tif currentHint == hintKey then\r\n\t\t\t\tscreenGui.Hint.Visible = false\r\n\t\t\tend\r\n\t\tend)\r\n\tend\r\n\t\r\n\t-- UI Type Library\r\n\tlocal lib = {}\r\n\t\r\n\tfunction lib.Color(data, dataArray)\r\n\t\tlocal guiObject = Color:Clone()\r\n\t\tlocal color3Value = gui:unpack(saveData.Options[data.ID].Value, \"Color3\") or data.Default or Color3.new(1, 1, 1)\r\n\t\tlocal guiData = {}\r\n\t\t\r\n\t\tlocal HSV = color3Value\r\n\t\tlocal H, S, V = color:rgbToHsv(HSV.r * 255, HSV.g * 255, HSV.b * 255)\r\n\t\t\r\n\t\tlocal newValue = function()\r\n\t\t\tHSV = Color3.fromHSV(H, S, V)\r\n\t\t\tguiObject.SV.BackgroundColor3 = Color3.fromHSV(H, 1, 1)\r\n\t\t\tguiObject.Indicator.BackgroundColor3 = HSV\r\n\t\t\tsaveData.Options[data.ID].Value = gui:pack(HSV, \"Color3\")\r\n\t\t\t\r\n\t\t\tguiObject.R.Text = math.floor(HSV.r * 255)\r\n\t\t\tguiObject.G.Text = math.floor(HSV.g * 255)\r\n\t\t\tguiObject.B.Text = math.floor(HSV.b * 255)\r\n\t\t\t\r\n\t\t\tif data.Callback then\r\n\t\t\t\tdata.Callback(HSV)\r\n\t\t\tend\r\n\t\tend\r\n\t\t\r\n\t\tlocal function updateHSV()\r\n\t\t\tH, S, V = color:rgbToHsv(HSV.r * 255, HSV.g * 255, HSV.b * 255)\r\n\t\tend\r\n\t\t\r\n\t\tlocal H_set = gui:sliderXY(guiObject.H, {guiObject.H}, function(X, Y, u)\r\n\t\t\tif not u then H = 1 - Y end\r\n\t\t\tguiObject.H.Locator.Position = UDim2.new(0.5, 0, Y, 0)\r\n\t\t\tnewValue()\r\n\t\tend)\r\n\t\t\r\n\t\tlocal SV_set = gui:sliderXY(guiObject.SV, {guiObject.SV}, function(X, Y, u)\r\n\t\t\tif not u then S = X; V = 1 - Y; end\r\n\t\t\tguiObject.SV.Locator.Position = UDim2.new(X, 0, Y, 0)\r\n\t\t\tnewValue()\r\n\t\tend)\r\n\t\t\r\n\t\tguiObject.R.FocusLost:Connect(function()\r\n\t\t\tHSV = Color3.new(guiObject.R.Text / 255, HSV.g, HSV.b)\r\n\t\t\tupdateHSV()\r\n\t\t\tnewValue()\r\n\t\tend)\r\n\t\tguiObject.G.FocusLost:Connect(function()\r\n\t\t\tHSV = Color3.new(HSV.r, guiObject.G.Text / 255, HSV.b)\r\n\t\t\tupdateHSV()\r\n\t\t\tnewValue()\r\n\t\tend)\r\n\t\tguiObject.B.FocusLost:Connect(function()\r\n\t\t\tHSV = Color3.new(HSV.r, HSV.g, guiObject.B.Text / 255)\r\n\t\t\tupdateHSV()\r\n\t\t\tnewValue()\r\n\t\tend)\r\n\t\t\r\n\t\tnewValue()\r\n\t\tSV_set(S, 1 - V)\r\n\t\tH_set(0, H)\r\n\t\t\r\n\t\tguiData.ySize = 0\r\n\t\tguiData.Open = false\r\n\t\tguiData.baseColor = colors.TextEnabled\r\n\t\t\r\n\t\tgui:setText(guiObject.Label, data.Name)\r\n\t\tgui:textColorOnHover(guiObject.Label, guiData)\r\n\t\t\r\n\t\treturn guiObject\r\n\tend\r\n\t\r\n\tfunction lib.Number(data, dataArray)\r\n\t\tlocal guiObject = Number:Clone()\r\n\t\tlocal Value = gui:unpack(saveData.Options[data.ID].Value, \"number\") or data.Default or math.floor(data.Min + (data.Max - data.Min) / 2)\r\n\t\tlocal guiData = {}\r\n\t\t\r\n\t\tlocal dMax = data.Max - data.Min\r\n\t\tlocal dValue = (Value - data.Min) / dMax\r\n\t\t\r\n\t\tdata.Round = data.Round or 1\r\n\t\t\r\n\t\tlocal newValue = function(delta)\r\n\t\t\tlocal exactValue = data.Min + (data.Max - data.Min) * delta\r\n\t\t\tValue = math.floor(exactValue / data.Round) * data.Round\r\n\t\t\tValue = math.clamp(Value, data.Min, data.Max)\r\n\t\t\tguiObject.Indicator.Value.Text = tostring(Value)\r\n\t\t\t\r\n\t\t\tif data.Callback then\r\n\t\t\t\tdata.Callback(Value)\r\n\t\t\tend\r\n\t\t\tsaveData.Options[data.ID].Value = gui:pack(Value, \"number\")\r\n\t\tend\r\n\t\t\r\n\t\tlocal slideSet = gui:createSlider(guiObject.ValueFrame, {guiObject.Label, guiObject.Indicator}, newValue)\r\n\t\tslideSet(math.clamp(dValue, 0, 1))\r\n\t\t\r\n\t\tguiObject.Indicator.MouseButton1Down:Connect(newValue)\r\n\t\tguiObject.Label.MouseButton1Down:Connect(newValue)\r\n\t\tnewValue(math.clamp(dValue, 0, 1))\r\n\t\t\r\n\t\tguiData.ySize = 0\r\n\t\tguiData.Open = false\r\n\t\tguiData.baseColor = colors.TextEnabled\r\n\t\t\r\n\t\tgui:createList(guiObject, guiData)\r\n\t\tgui:setText(guiObject.Label, data.Name)\r\n\t\tgui:textColorOnHover(guiObject.Label, guiData)\r\n\t\t\r\n\t\treturn guiObject\r\n\tend\r\n\t\r\n\tfunction lib.Execute(data, dataArray)\r\n\t\tlocal guiObject = Execute:Clone()\r\n\t\tlocal guiData = {}\r\n\t\t\r\n\t\tlocal newValue = function(val)\r\n\t\t\tif data.Callback then\r\n\t\t\t\tdata.Callback()\r\n\t\t\tend\r\n\t\tend\r\n\t\t\r\n\t\tguiObject.MouseEnter:Connect(function()\r\n\t\t\tgui.tween(guiObject.Indicator, \"Sine\", \"Out\", .25, {Size = UDim2.new(0, 40, 0, 25)})\r\n\t\tend)\r\n\t\t\r\n\t\tguiObject.MouseLeave:Connect(function()\r\n\t\t\tgui.tween(guiObject.Indicator, \"Sine\", \"Out\", .25, {Size = UDim2.new(0, 0, 0, 25)})\r\n\t\tend)\r\n\t\t\r\n\t\tguiObject.Indicator.MouseButton1Down:Connect(newValue)\r\n\t\tguiObject.Label.MouseButton1Down:Connect(newValue)\r\n\t\tnewValue(true)\r\n\t\t\r\n\t\tguiData.ySize = 0\r\n\t\tguiData.Open = false\r\n\t\tguiData.baseColor = colors.TextEnabled\r\n\t\t\r\n\t\tgui:createList(guiObject, guiData)\r\n\t\tgui:setText(guiObject.Label, data.Name)\r\n\t\tgui:textColorOnHover(guiObject.Label, guiData)\r\n\t\t\r\n\t\treturn guiObject\r\n\tend\r\n\t\r\n\tfunction lib.Mode(data, dataArray)\r\n\t\tlocal guiObject = Mode:Clone()\r\n\t\tlocal valueIndex = gui:unpack(saveData.Options[data.ID].Value, \"number\") or data.Default or 1\r\n\t\tlocal guiData = {}\r\n\t\t\r\n\t\tlocal newValue = function(val)\r\n\t\t\tif val == true then else\r\n\t\t\t\tvalueIndex = (valueIndex % #data.Modes) + 1\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tlocal Value = data.Modes[valueIndex]\r\n\t\t\tgui:setText(guiObject.Mode, Value)\r\n\t\t\t\r\n\t\t\tif data.Callback then\r\n\t\t\t\tdata.Callback(Value)\r\n\t\t\tend\r\n\t\t\tsaveData.Options[data.ID].Value = gui:pack(valueIndex)\r\n\t\tend\r\n\t\t\r\n\t\tguiObject.Mode.MouseButton1Down:Connect(newValue)\r\n\t\tguiObject.Label.MouseButton1Down:Connect(newValue)\r\n\t\tnewValue(true)\r\n\t\t\r\n\t\tguiData.ySize = 0\r\n\t\tguiData.Open = false\r\n\t\tguiData.baseColor = colors.TextEnabled\r\n\t\t\r\n\t\tgui:createList(guiObject, guiData)\r\n\t\tgui:setText(guiObject.Label, data.Name)\r\n\t\tgui:textColorOnHover(guiObject.Label, guiData)\r\n\t\t\r\n\t\treturn guiObject\r\n\tend\r\n\t\r\n\tfunction lib.Hotkey(data, dataArray)\r\n\t\tlocal guiObject = Mode:Clone()\r\n\t\tlocal hotkeyInput = gui:unpack(saveData.Hotkeys[data.ID], \"string\") or data.Hotkey or \"\"\r\n\t\tlocal guiData = {}\r\n\t\t\r\n\t\tlocal lastInput = hotkeyInput\r\n\t\tlocal mouseIn = false\r\n\t\t\r\n\t\tguiObject.Name = \"Z\"\r\n\t\t\r\n\t\tlocal newValue = function(val)\r\n\t\t\tlocal input\r\n\t\t\tgui:setText(guiObject.Mode, \"...\")\r\n\t\t\tsaveData.Hotkeys[data.ID] = nil\r\n\t\t\t\r\n\t\t\tif not val then\r\n\t\t\t\tinput = lastInput\r\n\t\t\t\tmouseIn = true\r\n\t\t\t\t\r\n\t\t\t\tlastInput = nil\r\n\t\t\t\t\r\n\t\t\t\trepeat wait() until mouseIn == false or lastInput\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tif not lastInput then\r\n\t\t\t\tlastInput = hotkeyInput\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tsaveData.Hotkeys[data.ID] = tostring(lastInput)\r\n\t\t\thotkeyFunctions[data.ID] = data.callback\r\n\t\t\t\r\n\t\t\thotkeyInput = tostring(lastInput)\r\n\t\t\tsaveData.Options[data.ID].Value = hotkeyInput\r\n\t\t\tgui:setText(guiObject.Mode, hotkeyInput:sub(14))\r\n\t\tend\r\n\t\t\r\n\t\tUserInputService.InputBegan:Connect(function(input)\r\n\t\t\tif input.KeyCode == Enum.KeyCode.Unknown then return end\r\n\t\t\tif input.KeyCode == Enum.KeyCode.Backspace then lastInput = \"\" return end\r\n\t\t\tlastInput = tostring(input.KeyCode)\r\n\t\tend)\r\n\t\t\r\n\t\tguiObject.Mode.MouseButton1Down:Connect(function() newValue() end)\r\n\t\tguiObject.Label.MouseButton1Down:Connect(function() newValue() end)\r\n\t\tguiObject.MouseLeave:Connect(function()\r\n\t\t\tmouseIn = false\r\n\t\tend)\r\n\t\tnewValue(true)\r\n\t\t\r\n\t\tguiData.ySize = 0\r\n\t\tguiData.Open = false\r\n\t\tguiData.baseColor = colors.TextEnabled\r\n\t\t\r\n\t\tgui:createList(guiObject, guiData)\r\n\t\tgui:setText(guiObject.Label, \"Hotkey\")\r\n\t\tgui:textColorOnHover(guiObject.Label, guiData)\r\n\t\t\r\n\t\tguiObject.Parent = dataArray.Object.OptionsFrame\r\n\t\t\r\n\t\treturn guiObject\r\n\tend\r\n\t\r\n\tfunction lib.Toggle(data, dataArray)\r\n\t\tlocal guiObject = Toggle:Clone()\r\n\t\tlocal Value = gui:unpack(saveData.Options[data.ID].Value, \"boolean\") or data.Default or false\r\n\t\tlocal guiData = {}\r\n\t\t\r\n\t\tlocal modFrame = ModLabel:Clone()\r\n\t\tmodFrame.Parent = Mods\r\n\t\tmodFrame.TextColor3 = Colors[math.random(1, #Colors)]\r\n\t\tmodFrame.Visible = false\r\n\t\tgui:setText(modFrame, data.Name)\r\n\t\t\r\n\t\tguiObject.Name = data.Name\r\n\t\t\r\n\t\tlocal newValue = function(val, set)\r\n\t\t\tif val == true then\r\n\t\t\telse\r\n\t\t\t\tif set then\r\n\t\t\t\t\tValue = set\r\n\t\t\t\telse\r\n\t\t\t\t\tValue = not Value\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tif Value then\r\n\t\t\t\tgui.tween(guiObject.Indicator, \"Sine\", \"Out\", .25, {BackgroundColor3 = Color3.fromRGB(60, 222, 60)})\r\n\t\t\t\tguiObject.Indicator.Text = \"ON\"\r\n\t\t\t\tguiData.baseColor = colors.TextEnabled\r\n\t\t\telse\r\n\t\t\t\tgui.tween(guiObject.Indicator, \"Sine\", \"Out\", .25, {BackgroundColor3 = Color3.fromRGB(222, 60, 60)})\r\n\t\t\t\tguiObject.Indicator.Text = \"OFF\"\r\n\t\t\t\tguiData.baseColor = colors.TextDisabled\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tif data.Callback then\r\n\t\t\t\tdata.Callback(Value)\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tsaveData.Options[data.ID].Value = gui:pack(Value)\r\n\t\t\tmodFrame.Visible = Value\r\n\t\t\t\r\n\t\tend\r\n\t\t\r\n\t\tguiObject.MouseEnter:Connect(function()\r\n\t\t\tgui.tween(guiObject.Indicator, \"Sine\", \"Out\", .25, {Size = UDim2.new(0, 40, 0, 25)})\r\n\t\tend)\r\n\t\t\r\n\t\tguiObject.MouseLeave:Connect(function()\r\n\t\t\tgui.tween(guiObject.Indicator, \"Sine\", \"Out\", .25, {Size = UDim2.new(0, 0, 0, 25)})\r\n\t\tend)\r\n\t\t\r\n\t\tgui.tween(guiObject.Indicator, \"Sine\", \"Out\", .25, {Size = UDim2.new(0, 0, 0, 25)})\r\n\t\tguiObject.Indicator.MouseButton1Down:Connect(function() newValue() end)\r\n\t\tguiObject.Label.MouseButton1Down:Connect(function() newValue() end)\r\n\t\tnewValue(true)\r\n\t\t\r\n\t\tguiData.ySize = 0\r\n\t\tguiData.Open = false\r\n\t\tguiData.baseColor = colors.TextDisabled\r\n\t\t\r\n\t\tgui:createList(guiObject, guiData)\r\n\t\tgui:setText(guiObject.Label, data.Name)\r\n\t\tgui:textColorOnHover(guiObject.Label, guiData)\r\n\t\t\r\n\t\tdata.callback = newValue\r\n\t\t\r\n\t\treturn guiObject\r\n\tend\r\n\t\r\n\tfunction lib.Checkbox(data, dataArray)\r\n\t\tlocal guiObject = Checkbox:Clone()\r\n\t\tlocal Value = gui:unpack(saveData.Options[data.ID].Value, \"boolean\") or data.Default or false\r\n\t\tlocal guiData = {}\r\n\t\t\r\n\t\tguiObject.Name = \"0\"\r\n\t\t\r\n\t\tlocal newValue = function(val)\r\n\t\t\tif val == true then else\r\n\t\t\t\tValue = not Value\r\n\t\t\tend\r\n\t\t\tif Value then\r\n\t\t\t\tgui.tween(guiObject.Indicator, \"Sine\", \"Out\", .35, {Size = UDim2.new(0, 35, 0, 35)})\r\n\t\t\t\tguiData.baseColor = colors.TextEnabled\r\n\t\t\telse\r\n\t\t\t\tgui.tween(guiObject.Indicator, \"Sine\", \"Out\", .35, {Size = UDim2.new(0, 0, 0, 35)})\r\n\t\t\t\tguiData.baseColor = colors.TextDisabled\r\n\t\t\tend\r\n\t\t\tif data.Callback then\r\n\t\t\t\tdata.Callback(Value)\r\n\t\t\tend\r\n\t\t\tsaveData.Options[data.ID].Value = gui:pack(Value)\r\n\t\tend\r\n\t\t\r\n\t\tguiObject.Indicator.MouseButton1Down:Connect(newValue)\r\n\t\tguiObject.Label.MouseButton1Down:Connect(newValue)\r\n\t\tnewValue(true)\r\n\t\t\r\n\t\tguiData.ySize = 0\r\n\t\tguiData.Open = false\r\n\t\tguiData.baseColor = colors.TextDisabled\r\n\t\t\r\n\t\tgui:createList(guiObject, guiData)\r\n\t\tgui:setText(guiObject.Label, data.Name)\r\n\t\tgui:textColorOnHover(guiObject.Label, guiData)\r\n\t\t\r\n\t\treturn guiObject\r\n\tend\r\n\t\r\n\tfunction lib.Frame(data, dataArray)\r\n\t\tlocal guiObject = Frame:Clone()\r\n\t\t\r\n\t\tlocal guiData = {}\r\n\t\tguiData.ySize = 0\r\n\t\tguiData.Open = false\r\n\t\t\r\n\t\tgui:createList(guiObject, guiData)\r\n\t\tgui:setText(guiObject.Label, data.Name)\r\n\t\tgui:textColorOnHover(guiObject.Label, guiData)\r\n\t\t\r\n\t\treturn guiObject\r\n\tend\r\n\t\r\n\tfunction lib.Container(data, dataArray)\r\n\t\tlocal guiObject = Container:Clone()\r\n\t\t\r\n\t\tguiObject.Position = gui:unpack(saveData.Options[data.ID].Position, \"UDim2\") or UDim2.new(0, 3, 0, 3 + gui:getn(settingsArray[2]) * 38)\r\n\t\t\r\n\t\tlocal guiData = {}\r\n\t\tguiData.yPos = 0\r\n\t\tguiData.ySize = 0\r\n\t\tguiData.Open = false\r\n\t\t\r\n\t\tgui:textColorOnHover(guiObject.Title, guiData)\r\n\t\tgui:createList(guiObject, guiData)\r\n\t\tgui:setText(guiObject.Title, data.Name)\r\n\t\tgui:makeDraggable(guiObject, function(x, y)\r\n\t\t\tguiData.yPos = y\r\n\t\t\tsaveData.Options[data.ID].Position = gui:pack(guiObject.Position)\r\n\t\tend)\r\n\t\t\r\n\t\treturn guiObject\r\n\tend\r\n\t\r\n\t-- UI Creation Library\r\n\tfunction gui.create(self, guiType, data)\r\n\t\tif self == gui then\r\n\t\t\tself = settingsArray\r\n\t\tend\r\n\t\t\r\n\t\tdata.ID = data.Name .. \"_\" .. (self[1].Name or \"TOP\")\r\n\t\t\r\n\t\tif not saveData.Options[data.ID] then\r\n\t\t\tsaveData.Options[data.ID] = {}\r\n\t\tend\r\n\t\t\r\n\t\tif self[1].Object:FindFirstChild(\"Dropdown\") then\r\n\t\t\tself[1].Object.Dropdown.Visible = true\r\n\t\tend\r\n\t\t\r\n\t\tlocal dataArray = {}\r\n\t\tlocal objectArray = {}\r\n\t\tlocal selfArray = {dataArray, objectArray, create = gui.create, callback = data.Callback}\r\n\t\tdataArray.Name = data.Name\r\n\t\tdataArray.Data = data\r\n\t\tdataArray.Object = lib[guiType](data, dataArray)\r\n\t\tdataArray.self = selfArray\r\n\t\t\r\n\t\tif guiType == \"Toggle\" then\r\n\t\t\tlib.Hotkey(data, dataArray)\r\n\t\tend\r\n\t\tif data.Hint then\r\n\t\t\tlocal Object = dataArray.Object\r\n\t\t\tgui:addHint(Object:FindFirstChild(\"Title\") or Object:FindFirstChild(\"Label\"), data.Hint)\r\n\t\tend\r\n\t\t\r\n\t\tself[1][data.Name] = selfArray\r\n\t\tself[2][data.Name] = dataArray.Object\r\n\t\t\r\n\t\tdataArray.Object.Parent = self[1].Object:FindFirstChild(\"OptionsFrame\") or self[1].Object\r\n\t\t\r\n\t\treturn dataArray\r\n\tend\r\n\t\r\n\t-- Connection Stuff\r\n\tgame:GetService(\"RunService\").RenderStepped:Connect(function()\r\n\t\tfor _, func in pairs(connections) do\r\n\t\t\tfunc()\r\n\t\tend\r\n\tend)\r\n\t\r\n\tUserInputService.InputBegan:Connect(function(input, gameProcessed)\r\n\t\tif gameProcessed then return end\r\n\t\tfor id, key in pairs(saveData.Hotkeys) do\r\n\t\t\tif key == tostring(input.KeyCode) then\r\n\t\t\t\thotkeyFunctions[id]()\r\n\t\t\tend\r\n\t\tend\r\n\tend)\r\n\t\r\n\tMods.Text = \"OpenGui \" .. _V\r\n\t\r\n\tgame.Close:Connect(function()\r\n\t\tSave()\r\n\tend)\r\n\t\r\n\treturn {gui, saveData, screenGui}\r\nend)()\r\n\r\nlocal _ESP = (function()\r\n\t--// Variables\r\n\tlocal RunService = game:GetService(\"RunService\")\r\n\tlocal Players = game:GetService(\"Players\")\r\n\t  local Player = Players.LocalPlayer\r\n\tlocal Screen = Instance.new(\"ScreenGui\")\r\n\t  local Viewport = Instance.new(\"ViewportFrame\", Screen)\r\n\t\r\n\tlocal module = {}\r\n\tlocal characters = {}\r\n\tlocal clones = {}\r\n\tlocal parts = {}\r\n\t\r\n\tmodule.Options = {\r\n\t\tEnabled = false,\r\n\t\tParent = script.Parent or game.CoreGui,\r\n\t\tColor = Color3.new(1, 1, 1),\r\n\t\tShowDescendants = false,\r\n\t\tTeamColor = false,\r\n\t\tShowSelf = false,\r\n\t\tShowTeam = false,\r\n\t\tMode = \"Shader\",\r\n\t\tOpacity = 1,\r\n\t\tArrow = false,\r\n\t\tMaxDistance = 500,\r\n\t}\r\n\t\r\n\t--// Edits\r\n\tViewport.Size = UDim2.new(1, 0, 1, 0)\r\n\tViewport.BackgroundTransparency = 1\r\n\tViewport.CurrentCamera = workspace.CurrentCamera\r\n\tScreen.IgnoreGuiInset = true\r\n\t\r\n\t--// Functions\r\n\tlocal function getParts(Model)\r\n\t\tlocal parts = {}\r\n\t\tlocal descendants = Model:GetDescendants()\r\n\t\tlocal descendantsn = #descendants\r\n\t\tfor i = 1, descendantsn do\r\n\t\t\tlocal desc = descendants[i]\r\n\t\t\tif desc:IsA(\"BasePart\") then\r\n\t\t\t\ttable.insert(parts, desc)\r\n\t\t\tend\r\n\t\tend\r\n\t\treturn parts\r\n\tend\r\n\t\r\n\tlocal function getPart(Model)\r\n\t\treturn Model.PrimaryPart or Model:FindFirstChild(\"HumanoidRootPart\") or Model:FindFirstChildWhichIsA(\"Part\")\r\n\tend\r\n\t\r\n\tfunction module:Clone(Object)\r\n\t\tlocal isArchivable = Object.Archivable\r\n\t\tlocal Clone\r\n\t\t\r\n\t\tObject.Archivable = true\r\n\t\tClone = Object:Clone()\r\n\t\tObject.Archivable = isArchivable\r\n\t\t\r\n\t\tfor _, child in pairs(Clone:GetDescendants()) do\r\n\t\t\tif child:IsA(\"Clothing\") or child:IsA(\"Decal\") or child:IsA(\"Script\") or child:IsA(\"LocalScript\") or child:IsA(\"Sound\") then\r\n\t\t\t\tchild:Destroy()\r\n\t\t\telseif child:IsA(\"BasePart\") then\r\n\t\t\t\tchild.Color = Color3.new(1, 1, 1)\r\n\t\t\t\tchild.Material = \"ForceField\"\r\n\t\t\telseif child:IsA(\"Humanoid\") then\r\n\t\t\t\tchild.DisplayDistanceType = \"None\"\r\n\t\t\telseif child:IsA(\"SpecialMesh\") then\r\n\t\t\t\tchild.TextureId = \"rbxassetid://55054494\"\r\n\t\t\telseif child:IsA(\"MeshPart\") then\r\n\t\t\t\tchild.TextureID = \"rbxassetid://55054494\"\r\n\t\t\tend\r\n\t\tend\r\n\t\t\r\n\t\treturn Clone\r\n\tend\r\n\t\r\n\tfunction module:Enable()\r\n\t\tmodule.Options.Enabled = true\r\n\t\tScreen.Parent = module.Options.Parent\r\n\t\t\r\n\t\tmodule:ReloadCharacters()\r\n\tend\r\n\t\r\n\tfunction module:Disable()\r\n\t\tmodule.Options.Enabled = false\r\n\t\tScreen.Parent = nil\r\n\tend\r\n\t\r\n\tfunction module:ReloadCharacters()\r\n\t\tViewport:ClearAllChildren()\r\n\t\tif module.Options.Mode ~= \"Shader\" then\r\n\t\t\treturn\r\n\t\tend\r\n\t\tfor player, character in pairs(characters) do\r\n\t\t\tlocal clone = module:Clone(character)\r\n\t\t\tclone.Name = player.Name\r\n\t\t\tclone.Parent = Viewport\r\n\t\t\tclones[player] = clone\r\n\t\tend\r\n\tend\r\n\t\r\n\tlocal function newPlayer(player)\r\n\t\tif player.Character then\r\n\t\t\tcharacters[player] = player.Character\r\n\t\t\t\r\n\t\t\tlocal clone = module:Clone(player.Character)\r\n\t\t\tclone.Name = player.Name\r\n\t\t\tclone.Parent = Viewport\r\n\t\t\tclones[player] = clone\r\n\t\tend\r\n\t\tplayer.CharacterAdded:Connect(function(char)\r\n\t\t\tif clones[player] then\r\n\t\t\t\tclones[player]:Destroy()\r\n\t\t\t\tclones[player] = nil\r\n\t\t\tend;if characters[player] then\r\n\t\t\t\tcharacters[player]:Destroy()\r\n\t\t\t\tcharacters[player] = nil\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tcharacters[player] = char\r\n\t\t\t\r\n\t\t\tlocal clone = module:Clone(char)\r\n\t\t\tclone.Name = player.Name\r\n\t\t\tclone.Parent = Viewport\r\n\t\t\tclones[player] = clone\r\n\t\tend)\r\n\tend\r\n\t\r\n\tPlayers.PlayerAdded:Connect(newPlayer)\r\n\tPlayers.PlayerRemoving:Connect(function(player)\r\n\t\tif clones[player] then\r\n\t\t\tclones[player]:Destroy()\r\n\t\t\tclones[player] = nil\r\n\t\tend;if characters[player] then\r\n\t\t\tcharacters[player]:Destroy()\r\n\t\t\tcharacters[player] = nil\r\n\t\tend\r\n\tend)\r\n\tfor _, player in pairs(Players:GetPlayers()) do\r\n\t\tnewPlayer(player)\r\n\tend\r\n\t\r\n\tRunService.RenderStepped:Connect(function()\r\n\t\tif module.Options.Enabled and module.Options.Mode == \"Shader\" then\r\n\t\t\tfor player, character in pairs(characters) do\r\n\t\t\t\tlocal clone = clones[player]\r\n\t\t\t\tlocal target = getPart(clone)\r\n\t\t\t\tif target then\r\n\t\t\t\t\tif ((player.Team == Player.Team and module.Options.ShowTeam) or player.Team ~= Player.Team) and (target.Position - workspace.CurrentCamera.CFrame.p).Magnitude \u003C= module.Options.MaxDistance then\r\n\t\t\t\t\t\tif (player == Player and module.Options.ShowSelf) or player ~= Player then\r\n\t\t\t\t\t\t\tlocal parts = getParts(clone)\r\n\t\t\t\t\t\t\tfor i = 1, #parts do\r\n\t\t\t\t\t\t\t\tlocal obj = parts[i]\r\n\t\t\t\t\t\t\t\tlocal cor = character:FindFirstChild(obj.Name, true)\r\n\t\t\t\t\t\t\t\tif character:FindFirstChild(obj.Parent.Name) then\r\n\t\t\t\t\t\t\t\t\tcor = character:FindFirstChild(obj.Parent.Name):FindFirstChild(obj.Name)\r\n\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif cor and obj then\r\n\t\t\t\t\t\t\t\t\tif module.Options.TeamColor then\r\n\t\t\t\t\t\t\t\t\t\tobj.Color = player.TeamColor.Color\r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\tobj.Color = Color3.new(1, 1, 1)\r\n\t\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\t\t\tif module.Options.ShowDescendants then\r\n\t\t\t\t\t\t\t\t\t\tobj.CFrame = cor.CFrame\r\n\t\t\t\t\t\t\t\t\telseif obj.Parent == clone then\r\n\t\t\t\t\t\t\t\t\t\tobj.CFrame = cor.CFrame\r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\tobj.CFrame = CFrame.new(10000, 10000, 10000)\r\n\t\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\tif clone.Parent == nil then\r\n\t\t\t\t\t\t\t\tclone.Parent = Viewport\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tclone.Parent = nil\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tclone.Parent = nil\r\n\t\t\t\t\tend\r\n\t\t\t\telse\r\n\t\t\t\t\tclone.Parent = nil\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\t\tViewport.ImageColor3 = module.Options.Color\r\n\t\t\tViewport.ImageTransparency = 1 - module.Options.Opacity\r\n\t\tend\r\n\tend)\r\n\t\r\n\treturn module\r\n\t\r\nend)()\r\nlocal _ESP2D = (function()\r\n\t--// Variables\r\n\tlocal RunService = game:GetService(\"RunService\")\r\n\tlocal Players = game:GetService(\"Players\")\r\n\t  local Player = Players.LocalPlayer\r\n\t\r\n\tlocal module = {}\r\n\tlocal characters = {}\r\n\tlocal esp = {}\r\n\t\r\n\tmodule.Options = {\r\n\t\tEnabled = false,\r\n\t\tParent = script.Parent or game.CoreGui,\r\n\t\tColor = Color3.new(1, 1, 1),\r\n\t\tTeamColor = false,\r\n\t\tShowSelf = false,\r\n\t\tShowTeam = false,\r\n\t\tShowDescendants = false,\r\n\t\tOpacity = 1,\r\n\t\tMode = \"Box\",\r\n\t\tArrow = false,\r\n\t\tMaxDistance = 500,\r\n\t}\r\n\t\r\n\t--// Functions\r\n\tlocal function getParts(Model)\r\n\t\tlocal parts = {}\r\n\t\tlocal descendants = (module.Options.ShowDescendants and Model:GetDescendants()) or Model:GetChildren()\r\n\t\tlocal descendantsn = #descendants\r\n\t\tfor i = 1, descendantsn do\r\n\t\t\tlocal desc = descendants[i]\r\n\t\t\tif desc:IsA(\"BasePart\") then\r\n\t\t\t\ttable.insert(parts, desc)\r\n\t\t\tend\r\n\t\tend\r\n\t\treturn parts\r\n\tend\r\n\t\r\n\tlocal function getPart(Model)\r\n\t\treturn Model.PrimaryPart or Model:FindFirstChild(\"HumanoidRootPart\") or Model:FindFirstChildWhichIsA(\"Part\")\r\n\tend\r\n\t\r\n\tfunction module:Enable()\r\n\t\tmodule.Options.Enabled = true\r\n\t\tmodule:ReloadCharacters()\r\n\tend\r\n\t\r\n\tfunction module:Disable()\r\n\t\tmodule.Options.Enabled = false\r\n\tend\r\n\t\r\n\tfunction module:LoadCharacter(player, char)\r\n\t\tlocal boxes = {}\r\n\t\tif module.Options.Mode == \"Default\" then\r\n\t\t\tlocal parts = getParts(char)\r\n\t\t\tfor i = 1, #parts do\r\n\t\t\t\tlocal part = parts[i]\r\n\t\t\t\tlocal adornment = Instance.new(\"BoxHandleAdornment\", module.Options.Parent)\r\n\t\t\t\tadornment.Adornee = part\r\n\t\t\t\tadornment.AlwaysOnTop = true\r\n\t\t\t\tadornment.Color3 = module.Options.Color\r\n\t\t\t\tadornment.Size = part.Size\r\n\t\t\t\tadornment.ZIndex = 1\r\n\t\t\t\tadornment.Transparency = 1 - module.Options.Opacity\r\n\t\t\t\tif module.Options.TeamColor then\r\n\t\t\t\t\tadornment.Color3 = player.TeamColor.Color\r\n\t\t\t\tend\r\n\t\t\t\t\r\n\t\t\t\ttable.insert(boxes, adornment)\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tlocal part = getPart(char)\r\n\t\t\tif module.Options.Arrow then\r\n\t\t\t\tlocal arrow = Instance.new(\"Handles\", module.Options.Parent)\r\n\t\t\t\tarrow.Adornee = part\r\n\t\t\t\tarrow.Faces = Faces.new(Enum.NormalId.Front)\r\n\t\t\t\tarrow.Style = Enum.HandlesStyle.Movement\r\n\t\t\t\tarrow.Color3 = module.Options.Color\r\n\t\t\t\tif module.Options.TeamColor then\r\n\t\t\t\t\tarrow.Color3 = player.TeamColor.Color\r\n\t\t\t\tend\r\n\t\t\t\ttable.insert(boxes, arrow)\r\n\t\t\tend\r\n\t\telseif module.Options.Mode == \"Box\" then\r\n\t\t\tlocal part = getPart(char)\r\n\t\t\tlocal adornment = Instance.new(\"BoxHandleAdornment\", module.Options.Parent)\r\n\t\t\tadornment.Adornee = part\r\n\t\t\tadornment.AlwaysOnTop = true\r\n\t\t\tadornment.Color3 = module.Options.Color\r\n\t\t\tadornment.Size = char:GetExtentsSize()\r\n\t\t\tadornment.ZIndex = 1\r\n\t\t\tadornment.Transparency = 1 - module.Options.Opacity\r\n\t\t\tif module.Options.TeamColor then\r\n\t\t\t\tadornment.Color3 = player.TeamColor.Color\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tif module.Options.Arrow then\r\n\t\t\t\tlocal arrow = Instance.new(\"Handles\", module.Options.Parent)\r\n\t\t\t\tarrow.Adornee = part\r\n\t\t\t\tarrow.Faces = Faces.new(Enum.NormalId.Front)\r\n\t\t\t\tarrow.Style = Enum.HandlesStyle.Movement\r\n\t\t\t\tarrow.Color3 = module.Options.Color\r\n\t\t\t\tif module.Options.TeamColor then\r\n\t\t\t\t\tarrow.Color3 = player.TeamColor.Color\r\n\t\t\t\tend\r\n\t\t\t\ttable.insert(boxes, arrow)\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\ttable.insert(boxes, adornment)\r\n\t\telseif module.Options.Mode == \"Square\" then\r\n\t\t\tlocal part = getPart(char)\r\n\t\t\tlocal billboard = (function()\r\n\t\tlocal partsWithId = {}\r\n\t\tlocal awaitRef = {}\r\n\t\t\r\n\t\tlocal root = {\r\n\t\t\tID = 0;\r\n\t\t\tType = \"BillboardGui\";\r\n\t\t\tProperties = {\r\n\t\t\t\tClipsDescendants = true;\r\n\t\t\t\tLightInfluence = 1;\r\n\t\t\t\tName = \"B\";\r\n\t\t\t\tZIndexBehavior = Enum.ZIndexBehavior.Sibling;\r\n\t\t\t\tStudsOffset = Vector3.new(0,-0.5,0);\r\n\t\t\t\tActive = true;\r\n\t\t\t\tAlwaysOnTop = true;\r\n\t\t\t\tSize = UDim2.new(5,0,6,0);\r\n\t\t\t};\r\n\t\t\tChildren = {\r\n\t\t\t\t{\r\n\t\t\t\t\tID = 1;\r\n\t\t\t\t\tType = \"Frame\";\r\n\t\t\t\t\tProperties = {\r\n\t\t\t\t\t\tAnchorPoint = Vector2.new(0.5,0.5);\r\n\t\t\t\t\t\tBackgroundTransparency = 0.5;\r\n\t\t\t\t\t\tPosition = UDim2.new(0.5,0,0.5,0);\r\n\t\t\t\t\t\tBorderColor3 = Color3.new(4/51,4/51,4/51);\r\n\t\t\t\t\t\tSize = UDim2.new(1,-4,1,-4);\r\n\t\t\t\t\t\tBorderSizePixel = 2;\r\n\t\t\t\t\t\tBackgroundColor3 = Color3.new(1,1,1);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tChildren = {};\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\tlocal function Scan(item, parent)\r\n\t\t\tlocal obj = Instance.new(item.Type)\r\n\t\t\tif (item.ID) then\r\n\t\t\t\tlocal awaiting = awaitRef[item.ID]\r\n\t\t\t\tif (awaiting) then\r\n\t\t\t\t\tawaiting[1][awaiting[2]] = obj\r\n\t\t\t\t\tawaitRef[item.ID] = nil\r\n\t\t\t\telse\r\n\t\t\t\t\tpartsWithId[item.ID] = obj\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\t\tfor p,v in pairs(item.Properties) do\r\n\t\t\t\tif (type(v) == \"string\") then\r\n\t\t\t\t\tlocal id = tonumber(v:match(\"^_R:(%w+)_$\"))\r\n\t\t\t\t\tif (id) then\r\n\t\t\t\t\t\tif (partsWithId[id]) then\r\n\t\t\t\t\t\t\tv = partsWithId[id]\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tawaitRef[id] = {obj, p}\r\n\t\t\t\t\t\t\tv = nil\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\t\tobj[p] = v\r\n\t\t\tend\r\n\t\t\tfor _,c in pairs(item.Children) do\r\n\t\t\t\tScan(c, obj)\r\n\t\t\tend\r\n\t\t\tobj.Parent = parent\r\n\t\t\treturn obj\r\n\t\tend\r\n\t\t\r\n\t\treturn function() return Scan(root, nil) end\r\n\tend)()()\r\n\t\t\tbillboard.Parent = module.Options.Parent\r\n\t\t\tbillboard.Adornee = part\r\n\t\t\tbillboard.Frame.BackgroundColor3 = module.Options.Color\r\n\t\t\tbillboard.Frame.Transparency = 1 - module.Options.Opacity\r\n\t\t\tif module.Options.TeamColor then\r\n\t\t\t\tbillboard.Frame.Color3 = player.TeamColor.Color\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tif module.Options.Arrow then\r\n\t\t\t\tlocal arrow = Instance.new(\"Handles\", module.Options.Parent)\r\n\t\t\t\tarrow.Adornee = part\r\n\t\t\t\tarrow.Faces = Faces.new(Enum.NormalId.Front)\r\n\t\t\t\tarrow.Style = Enum.HandlesStyle.Movement\r\n\t\t\t\tarrow.Color3 = module.Options.Color\r\n\t\t\t\tif module.Options.TeamColor then\r\n\t\t\t\t\tarrow.Color3 = player.TeamColor.Color\r\n\t\t\t\tend\r\n\t\t\t\ttable.insert(boxes, arrow)\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\ttable.insert(boxes, billboard)\r\n\t\tend\r\n\t\tesp[player] = boxes\r\n\tend\r\n\t\r\n\tfunction module:ReloadCharacters()\r\n\t\tfor plr, tbl in pairs(esp) do\r\n\t\t\tfor i, v in pairs(tbl) do\r\n\t\t\t\tv:Destroy()\r\n\t\t\tend\r\n\t\t\tesp[plr] = {}\r\n\t\tend\r\n\t\tif module.Options.Enabled then\r\n\t\t\tfor player, character in pairs(characters) do\r\n\t\t\t\tlocal target = getPart(character)\r\n\t\t\t\tif target then\r\n\t\t\t\t\tif ((player.Team == Player.Team and module.Options.ShowTeam) or player.Team ~= Player.Team) and target and (target.Position - workspace.CurrentCamera.CFrame.p).Magnitude \u003C= module.Options.MaxDistance then\r\n\t\t\t\t\t\tif (player == Player and module.Options.ShowSelf) or player ~= Player then\r\n\t\t\t\t\t\t\tmodule:LoadCharacter(player, character)\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\t\r\n\tlocal function newPlayer(player)\r\n\t\tif player.Character then\r\n\t\t\tcharacters[player] = player.Character\r\n\t\t\tmodule:LoadCharacter(player, player.Character)\r\n\t\tend\r\n\t\tplayer.CharacterAdded:Connect(function(char)\r\n\t\t\tif esp[player] then\r\n\t\t\t\tfor i, v in pairs(esp[player]) do\r\n\t\t\t\t\tv:Destroy()\r\n\t\t\t\tend\r\n\t\t\t\tesp[player] = {}\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tcharacters[player] = char\r\n\t\t\tmodule:LoadCharacter(player, player.Character)\r\n\t\tend)\r\n\tend\r\n\t\r\n\tPlayers.PlayerAdded:Connect(newPlayer)\r\n\tPlayers.PlayerRemoving:Connect(function(player)\r\n\t\tif esp[player] then\r\n\t\t\tfor i, v in pairs(esp[player]) do\r\n\t\t\t\tv:Destroy()\r\n\t\t\tend\r\n\t\t\tesp[player] = {}\r\n\t\t\tcharacters[player] = nil\r\n\t\tend\r\n\tend)\r\n\tfor _, player in pairs(Players:GetPlayers()) do\r\n\t\tnewPlayer(player)\r\n\tend\r\n\t\r\n\tspawn(function()\r\n\t\twhile wait(2) do\r\n\t\t\tmodule:ReloadCharacters()\r\n\t\tend\r\n\tend)\r\n\t\r\n\treturn module\r\n\t\r\nend)()\r\nlocal _Chams = (function()\r\n\t--// Variables\r\n\tlocal RunService = game:GetService(\"RunService\")\r\n\tlocal Players = game:GetService(\"Players\")\r\n\t  local Player = Players.LocalPlayer\r\n\tlocal Screen = Instance.new(\"ScreenGui\")\r\n\t  local Viewport = Instance.new(\"ViewportFrame\", Screen)\r\n\t\r\n\tlocal module = {}\r\n\tlocal characters = {}\r\n\tlocal clones = {}\r\n\tlocal parts = {}\r\n\t\r\n\tmodule.Options = {\r\n\t\tEnabled = false,\r\n\t\tParent = script.Parent or game.CoreGui,\r\n\t\tColor = Color3.new(1, 1, 1),\r\n\t\tShowDescendants = false,\r\n\t\tTeamColor = false,\r\n\t\tShowSelf = false,\r\n\t\tShowTeam = false,\r\n\t\tMode = \"Shader\",\r\n\t\tOpacity = 1,\r\n\t\tMaxDistance = 500,\r\n\t}\r\n\t\r\n\t--// Edits\r\n\tViewport.Size = UDim2.new(1, 0, 1, 0)\r\n\tViewport.BackgroundTransparency = 1\r\n\tViewport.CurrentCamera = workspace.CurrentCamera\r\n\tScreen.IgnoreGuiInset = true\r\n\t\r\n\t--// Functions\r\n\tlocal function getParts(Model)\r\n\t\tlocal parts = {}\r\n\t\tlocal descendants = Model:GetDescendants()\r\n\t\tlocal descendantsn = #descendants\r\n\t\tfor i = 1, descendantsn do\r\n\t\t\tlocal desc = descendants[i]\r\n\t\t\tif desc:IsA(\"BasePart\") then\r\n\t\t\t\ttable.insert(parts, desc)\r\n\t\t\tend\r\n\t\tend\r\n\t\treturn parts\r\n\tend\r\n\t\r\n\tlocal function getPart(Model)\r\n\t\treturn Model.PrimaryPart or Model:FindFirstChild(\"HumanoidRootPart\") or Model:FindFirstChildWhichIsA(\"Part\")\r\n\tend\r\n\t\r\n\tfunction module:Clone(Object)\r\n\t\tlocal isArchivable = Object.Archivable\r\n\t\tlocal Clone\r\n\t\t\r\n\t\tObject.Archivable = true\r\n\t\tClone = Object:Clone()\r\n\t\tObject.Archivable = isArchivable\r\n\t\t\r\n\t\tif module.Options.Mode == \"Shader\" then\r\n\t\t\tViewport.Ambient = Color3.fromRGB(200, 200, 200)\r\n\t\telse\r\n\t\t\tViewport.Ambient = Color3.fromRGB(255, 255, 255)\r\n\t\tend\r\n\t\t\r\n\t\tfor _, child in pairs(Clone:GetDescendants()) do\r\n\t\t\tif child:IsA(\"Script\") or child:IsA(\"LocalScript\") or child:IsA(\"Sound\") then\r\n\t\t\t\tchild:Destroy()\r\n\t\t\telseif child:IsA(\"Humanoid\") then\r\n\t\t\t\tchild.DisplayDistanceType = \"None\"\r\n\t\t\telseif module.Options.Mode ~= \"Shader\" then\r\n\t\t\t\tif child:IsA(\"SpecialMesh\") then\r\n\t\t\t\t\tchild.TextureId = \"\"\r\n\t\t\t\telseif child:IsA(\"MeshPart\") then\r\n\t\t\t\t\tchild.TextureID = \"\"\r\n\t\t\t\telseif child:IsA(\"BasePart\") then\r\n\t\t\t\t\tchild.Color = Color3.new(1, 1, 1)\r\n\t\t\t\t\tchild.Material = \"Neon\"\r\n\t\t\t\telseif child:IsA(\"Clothing\") or child:IsA(\"Decal\") then\r\n\t\t\t\t\tchild:Destroy()\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\t\t\r\n\t\treturn Clone\r\n\tend\r\n\t\r\n\tfunction module:Enable()\r\n\t\tmodule.Options.Enabled = true\r\n\t\tScreen.Parent = module.Options.Parent\r\n\t\t\r\n\t\tmodule:ReloadCharacters()\r\n\tend\r\n\t\r\n\tfunction module:Disable()\r\n\t\tmodule.Options.Enabled = false\r\n\t\tScreen.Parent = nil\r\n\tend\r\n\t\r\n\tfunction module:ReloadCharacters()\r\n\t\tViewport:ClearAllChildren()\r\n\t\tfor player, character in pairs(characters) do\r\n\t\t\tlocal clone = module:Clone(character)\r\n\t\t\tclone.Name = player.Name\r\n\t\t\tclone.Parent = Viewport\r\n\t\t\tclones[player] = clone\r\n\t\tend\r\n\tend\r\n\t\r\n\tlocal function newPlayer(player)\r\n\t\tif player.Character then\r\n\t\t\tcharacters[player] = player.Character\r\n\t\t\t\r\n\t\t\tlocal clone = module:Clone(player.Character)\r\n\t\t\tclone.Name = player.Name\r\n\t\t\tclone.Parent = Viewport\r\n\t\t\tclones[player] = clone\r\n\t\tend\r\n\t\tplayer.CharacterAdded:Connect(function(char)\r\n\t\t\tif clones[player] then\r\n\t\t\t\tclones[player]:Destroy()\r\n\t\t\t\tclones[player] = nil\r\n\t\t\tend;if characters[player] then\r\n\t\t\t\tcharacters[player]:Destroy()\r\n\t\t\t\tcharacters[player] = nil\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tcharacters[player] = char\r\n\t\t\t\r\n\t\t\tlocal clone = module:Clone(char)\r\n\t\t\tclone.Name = player.Name\r\n\t\t\tclone.Parent = Viewport\r\n\t\t\tclones[player] = clone\r\n\t\tend)\r\n\tend\r\n\t\r\n\tPlayers.PlayerAdded:Connect(newPlayer)\r\n\tPlayers.PlayerRemoving:Connect(function(player)\r\n\t\tif clones[player] then\r\n\t\t\tclones[player]:Destroy()\r\n\t\t\tclones[player] = nil\r\n\t\tend;if characters[player] then\r\n\t\t\tcharacters[player]:Destroy()\r\n\t\t\tcharacters[player] = nil\r\n\t\tend\r\n\tend)\r\n\tfor _, player in pairs(Players:GetPlayers()) do\r\n\t\tnewPlayer(player)\r\n\tend\r\n\t\r\n\tRunService.RenderStepped:Connect(function()\r\n\t\tif module.Options.Enabled then\r\n\t\t\tfor player, character in pairs(characters) do\r\n\t\t\t\tlocal clone = clones[player]\r\n\t\t\t\tlocal target = getPart(clone)\r\n\t\t\t\t\r\n\t\t\t\tif target then\r\n\t\t\t\t\tif ((player.Team == Player.Team and module.Options.ShowTeam) or player.Team ~= Player.Team) and target and (target.Position - workspace.CurrentCamera.CFrame.p).Magnitude \u003C= module.Options.MaxDistance then\r\n\t\t\t\t\t\tif (player == Player and module.Options.ShowSelf) or player ~= Player then\r\n\t\t\t\t\t\t\tlocal parts = getParts(clone)\r\n\t\t\t\t\t\t\tfor i = 1, #parts do\r\n\t\t\t\t\t\t\t\tlocal obj = parts[i]\r\n\t\t\t\t\t\t\t\tlocal cor = character:FindFirstChild(obj.Name, true)\r\n\t\t\t\t\t\t\t\tif character:FindFirstChild(obj.Parent.Name) then\r\n\t\t\t\t\t\t\t\t\tcor = character:FindFirstChild(obj.Parent.Name):FindFirstChild(obj.Name)\r\n\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif cor and obj then\r\n\t\t\t\t\t\t\t\t\tif module.Options.TeamColor then\r\n\t\t\t\t\t\t\t\t\t\tobj.Color = player.TeamColor.Color\r\n\t\t\t\t\t\t\t\t\telseif module.Options.Mode ~= \"Shader\" then\r\n\t\t\t\t\t\t\t\t\t\tobj.Color = Color3.new(1, 1, 1)\r\n\t\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\t\t\tif module.Options.ShowDescendants then\r\n\t\t\t\t\t\t\t\t\t\tobj.CFrame = cor.CFrame\r\n\t\t\t\t\t\t\t\t\telseif obj.Parent == clone then\r\n\t\t\t\t\t\t\t\t\t\tobj.CFrame = cor.CFrame\r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\tobj.CFrame = CFrame.new(10000, 10000, 10000)\r\n\t\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\tif clone.Parent == nil then\r\n\t\t\t\t\t\t\t\tclone.Parent = Viewport\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tclone.Parent = nil\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tclone.Parent = nil\r\n\t\t\t\t\tend\r\n\t\t\t\telse\r\n\t\t\t\t\tclone.Parent = nil\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\t\tViewport.ImageColor3 = module.Options.Color\r\n\t\t\tViewport.ImageTransparency = 1 - module.Options.Opacity\r\n\t\tend\r\n\tend)\r\n\t\r\n\treturn module\r\n\t\r\nend)()\r\nlocal _Tracers = (function()\r\n\t--// Variables\r\n\tlocal RunService = game:GetService(\"RunService\")\r\n\tlocal Players = game:GetService(\"Players\")\r\n\t  local Player = Players.LocalPlayer\r\n\tlocal Screen = Instance.new(\"ScreenGui\")\r\n\tlocal Camera = workspace.CurrentCamera\r\n\t\r\n\tlocal module = {}\r\n\tlocal characters = {}\r\n\tlocal tracers = {}\r\n\t\r\n\tmodule.Options = {\r\n\t\tEnabled = false,\r\n\t\tParent = script.Parent or game.CoreGui,\r\n\t\tColor = Color3.new(1, 1, 1),\r\n\t\tTeamColor = false,\r\n\t\tShowSelf = false,\r\n\t\tShowTeam = false,\r\n\t\tOpacity = 1,\r\n\t\tRadius = 1,\r\n\t\tMaxDistance = 500,\r\n\t}\r\n\t\r\n\tScreen.Parent = module.Options.Parent\r\n\tScreen.IgnoreGuiInset = true\r\n\t\r\n\t--// Functions\r\n\tlocal function getParts(Model)\r\n\t\tlocal parts = {}\r\n\t\tlocal descendants = Model:GetDescendants()\r\n\t\tlocal descendantsn = #descendants\r\n\t\tfor i = 1, descendantsn do\r\n\t\t\tlocal desc = descendants[i]\r\n\t\t\tif desc:IsA(\"BasePart\") then\r\n\t\t\t\ttable.insert(parts, desc)\r\n\t\t\tend\r\n\t\tend\r\n\t\treturn parts\r\n\tend\r\n\t\r\n\tlocal function getPart(Model)\r\n\t\treturn Model.PrimaryPart or Model:FindFirstChild(\"HumanoidRootPart\") or Model:FindFirstChildWhichIsA(\"Part\")\r\n\tend\r\n\t\r\n\tfunction module:Enable()\r\n\t\tmodule.Options.Enabled = true\r\n\t\tmodule:ReloadCharacters()\r\n\tend\r\n\t\r\n\tfunction module:Disable()\r\n\t\tmodule.Options.Enabled = false\r\n\t\tfor plr, line in pairs(tracers) do\r\n\t\t\tif line then\r\n\t\t\t\tline[1]:Destroy()\r\n\t\t\tend\r\n\t\t\ttracers[plr] = nil\r\n\t\tend\r\n\tend\r\n\t\r\n\tfunction module:LoadCharacter(player, char)\r\n\t\tlocal tracer = {}\r\n\t\tlocal target = getPart(char)\r\n\t\tif target then\r\n\t\t\tlocal line = Instance.new(\"Part\", Screen)\r\n\t\t\tline.Transparency = 1\r\n\t\t\tline.Anchored = true\r\n\t\t\tline.CanCollide = false\r\n\t\t\t\r\n\t\t\tlocal adornment = Instance.new(\"LineHandleAdornment\", line)\r\n\t\t\tadornment.Name = \"A\"\r\n\t\t\tadornment.AlwaysOnTop = true\r\n\t\t\tadornment.ZIndex = 1\r\n\t\t\tadornment.Adornee = line\r\n\t\t\t\r\n\t\t\ttracer[1] = line\r\n\t\t\ttracer[2] = target\r\n\t\t\ttracer[3] = player\r\n\t\telse\r\n\t\t\treturn\r\n\t\tend\r\n\t\t\r\n\t\ttracers[player] = tracer\r\n\tend\r\n\t\r\n\tfunction module:ReloadCharacters()\r\n\t\tfor plr, line in pairs(tracers) do\r\n\t\t\tif line then\r\n\t\t\t\tline[1]:Destroy()\r\n\t\t\tend\r\n\t\t\ttracers[plr] = nil\r\n\t\tend\r\n\t\tif module.Options.Enabled then\r\n\t\t\tfor player, character in pairs(characters) do\r\n\t\t\t\tif (player.Team == Player.Team and module.Options.ShowTeam) or player.Team ~= Player.Team then\r\n\t\t\t\t\tif (player == Player and module.Options.ShowSelf) or player ~= Player then\r\n\t\t\t\t\t\tmodule:LoadCharacter(player, character)\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\t\r\n\tlocal function newPlayer(player)\r\n\t\tif player.Character then\r\n\t\t\tcharacters[player] = player.Character\r\n\t\t\tmodule:LoadCharacter(player, player.Character)\r\n\t\tend\r\n\t\tplayer.CharacterAdded:Connect(function(char)\r\n\t\t\tif tracers[player] then\r\n\t\t\t\ttracers[player][1]:Destroy()\r\n\t\t\t\ttracers[player] = nil\r\n\t\t\tend\r\n\t\t\tchar:WaitForChild(\"Humanoid\")\r\n\t\t\tcharacters[player] = char\r\n\t\t\tmodule:LoadCharacter(player, player.Character)\r\n\t\tend)\r\n\tend\r\n\t\r\n\tPlayers.PlayerAdded:Connect(newPlayer)\r\n\tPlayers.PlayerRemoving:Connect(function(player)\r\n\t\tif tracers[player] then\r\n\t\t\tif tracers[player] then\r\n\t\t\t\ttracers[player][1]:Destroy()\r\n\t\t\t\ttracers[player] = nil\r\n\t\t\tend\r\n\t\t\tcharacters[player] = nil\r\n\t\tend\r\n\tend)\r\n\tfor _, player in pairs(Players:GetPlayers()) do\r\n\t\tnewPlayer(player)\r\n\tend\r\n\t\r\n\tlocal function divideUDim(udim, factor)\r\n\t\treturn UDim2.new(udim.X.Scale / factor, udim.X.Offset / factor, udim.Y.Scale / factor, udim.Y.Offset / factor)\r\n\tend\r\n\t\r\n\tRunService.RenderStepped:Connect(function()\r\n\t\tif module.Options.Enabled then\r\n\t\t\tfor player, data in pairs(tracers) do\r\n\t\t\t\tlocal line, target = unpack(data)\r\n\t\t\t\tif (target and (player.Team == Player.Team and module.Options.ShowTeam) or player.Team ~= Player.Team) and (target.Position - Camera.CFrame.p).Magnitude \u003C= module.Options.MaxDistance then\r\n\t\t\t\t\tif (player == Player and module.Options.ShowSelf) or player ~= Player then\r\n\t\t\t\t\t\tif line.Parent ~= Screen then\r\n\t\t\t\t\t\t\tline.Parent = Screen\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlocal point1 = (Camera.CFrame * CFrame.new(0, 0, -0.5) - Vector3.new(0, 3, 0)).p\r\n\t\t\t\t\t\tlocal point2 = target.Position - Vector3.new(0, 3, 0)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlocal distance = point1 - point2\r\n\t\t\t\t\t\tlocal magnitude = distance.Magnitude\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlocal c = module.Options.Color\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tline.CFrame = CFrame.new(point1, point2)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tline.A.Thickness = module.Options.Radius\r\n\t\t\t\t\t\tline.A.Length = magnitude\r\n\t\t\t\t\t\tline.A.Color3 = Color3.new(c.r*5,c.g*5,c.b*5)\r\n\t\t\t\t\t\tline.A.Transparency = 1 - module.Options.Opacity\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tline.Parent = nil\r\n\t\t\t\t\tend\r\n\t\t\t\telse\r\n\t\t\t\t\tline.Parent = nil\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend)\r\n\t\r\n\tspawn(function()\r\n\t\twhile wait(2) do\r\n\t\t\tif module.Options.Enabled then\r\n\t\t\t\tmodule:ReloadCharacters()\r\n\t\t\tend\r\n\t\tend\r\n\tend)\r\n\t\r\n\treturn module\r\n\t\r\nend)()\r\nlocal _Aimbot = (function()\r\n\t--// Variables\r\n\tlocal RunService = game:GetService(\"RunService\")\r\n\tlocal UserInputService = game:GetService(\"UserInputService\")\r\n\tlocal Players = game:GetService(\"Players\")\r\n\t  local Player = Players.LocalPlayer\r\n\t    local Mouse = Player:GetMouse()\r\n\tlocal Camera = workspace.CurrentCamera\r\n\t\r\n\tlocal nearestCharacters = {}\r\n\tlocal module = {}\r\n\t\r\n\tmodule.Options = {\r\n\t\tEasing = 2,\r\n\t\tEnabled = false,\r\n\t\tShowTeams = false,\r\n\t\tMaxDistance = 500,\r\n\t\tLegit = false,\r\n\t\tAimPart = \"Head\",\r\n\t\tOnscreen = false,\r\n\t\tVisible = true,\r\n\t\tMode = \"Nearest\",\r\n\t\tRadius = 250,\r\n\t}\r\n\t\r\n\t--// Functions\r\n\tlocal function findPart(Model)\r\n\t\treturn Model:FindFirstChild(module.Options.AimPart) or Model:FindFirstChild(\"HumanoidRootPart\") or Model.PrimaryPart or Model:FindFirstChildWhichIsA(\"Part\", true)\r\n\tend\r\n\t\r\n\tlocal mousemoverel = (mousemoverel or (Input and Input.MouseMove)) or function() end\r\n\t\r\n\tlocal function mouseMove(x, y, depth)\r\n\t\tlocal v1, v2 = Vector2.new(x, y), Vector2.new(Mouse.X, Mouse.Y)\r\n\t\tlocal viewCenter = Vector2.new(Mouse.ViewSizeX/2, Mouse.ViewSizeY/2)\r\n\t\t\r\n\t\tif depth \u003C 0 then\r\n\t\t\tlocal n = 1\r\n\t\t\tif (v1 - v2).X \u003C 0 then\r\n\t\t\t\tn = -1\r\n\t\t\tend\r\n\t\t\tif math.abs(v1.X - v2.X) \u003C Mouse.ViewSizeX * 1.5 then\r\n\t\t\t\tn = n / 2\r\n\t\t\tend\r\n\t\t\tv1 = v1 + Vector2.new(Mouse.ViewSizeX * n, 0)\r\n\t\tend\r\n\t\t\r\n\t\tlocal diff = (v1 - v2) / module.Options.Easing\r\n\t\t\r\n\t\tif module.Options.Legit then\r\n\t\t\tdiff = diff.Unit * diff.Magnitude\r\n\t\tend\r\n\t\t\r\n\t\tmousemoverel(diff.X, diff.Y)\r\n\tend\r\n\t\r\n\tlocal function updateMouse(target)\r\n\t\tif not target then return end\r\n\t\tlocal posVector3 = Camera:WorldToScreenPoint(target.Position)\r\n\t\tlocal posVector2, distance = Vector2.new(posVector3.X, posVector3.Y), posVector3.Z\r\n\t\tmouseMove(posVector2.X, posVector2.Y, posVector3.Z)\r\n\tend\r\n\t\r\n\tlocal function updateNearest()\r\n\t\tnearestCharacters = {}\r\n\t\tfor _, player in pairs(Players:GetPlayers()) do\r\n\t\t\tif player ~= Player then\r\n\t\t\t\tif (player.Team == Player.Team and module.Options.ShowTeams) or player.Team ~= Player.Team then\r\n\t\t\t\t\tif player.Character then\r\n\t\t\t\t\t\tlocal part = findPart(player.Character)\r\n\t\t\t\t\t\tif part then --too many ifs\r\n\t\t\t\t\t\t\tlocal distance = (part.Position - Camera.CFrame.p).Magnitude\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlocal a, onScreen = Camera:WorldToScreenPoint(part.Position)\r\n\t\t\t\t\t\t\tlocal obstructed = #Camera:GetPartsObscuringTarget({part.Position}, {player.Character, Player.Character}) > 0\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif distance \u003C= module.Options.MaxDistance then\r\n\t\t\t\t\t\t\t\tif (module.Options.Onscreen and onScreen) or not module.Options.Onscreen then\r\n\t\t\t\t\t\t\t\t\tif (module.Options.Visible and not obstructed) or not module.Options.Visible then\r\n\t\t\t\t\t\t\t\t\t\ttable.insert(nearestCharacters, {tostring(distance), part, a.Z})\r\n\t\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\t\r\n\tlocal windowFocused = true\r\n\tRunService.RenderStepped:Connect(function()\r\n\t\tif module.Options.Enabled == false or not windowFocused then return end\r\n\t\tupdateNearest()\r\n\t\t\r\n\t\tlocal dist, nearestPart = 2048\r\n\t\t\r\n\t\ttable.sort(nearestCharacters, function(a, b)\r\n\t\t\tlocal D1, NP1 = unpack(a)\r\n\t\t\tlocal D2, NP2 = unpack(b)\r\n\t\t\treturn tonumber(D1) \u003C tonumber(D2)\r\n\t\tend)\r\n\t\t\r\n\t\tif module.Options.Mode == \"Nearest\" then\r\n\t\t\tif nearestCharacters[1] then\r\n\t\t\t\tlocal D, NP = unpack(nearestCharacters[1])\r\n\t\t\t\tnearestPart = NP\r\n\t\t\tend\r\n\t\telse\r\n\t\t\tfor i, v in pairs(nearestCharacters) do\r\n\t\t\t\tlocal D, NP, Depth = unpack(v)\r\n\t\t\t\t\r\n\t\t\t\tlocal pV3 = Camera:WorldToScreenPoint(NP.Position)\r\n\t\t\t\tlocal v1, v2 = Vector2.new(pV3.X, pV3.Y), Vector2.new(Mouse.X, Mouse.Y)\r\n\t\t\t\t\r\n\t\t\t\tif (v1 - v2).Magnitude \u003C= module.Options.Radius and Depth >= 0 then\r\n\t\t\t\t\tnearestPart = NP\r\n\t\t\t\t\tbreak\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\t\t\r\n\t\tif nearestPart then\r\n\t\t\tupdateMouse(nearestPart)\r\n\t\tend\r\n\tend)\r\n\t\r\n\tUserInputService.WindowFocused:Connect(function()\r\n\t\twindowFocused = true\r\n\tend)\r\n\tUserInputService.WindowFocusReleased:Connect(function()\r\n\t\twindowFocused = false\r\n\tend)\r\n\t\r\n\treturn module\r\n\t\r\nend)()\r\nlocal _Flight = (function()\r\n\t--// Variables\r\n\tlocal RunService = game:GetService(\"RunService\")\r\n\tlocal UserInputService = game:GetService(\"UserInputService\")\r\n\tlocal Players = game:GetService(\"Players\")\r\n\t  local Player = Players.LocalPlayer\r\n\t    local character = Player.Character\r\n\tlocal camera = workspace.CurrentCamera\r\n\t\r\n\tlocal module = {}\r\n\tmodule.Options = {\r\n\t\tSpeed = 5,\r\n\t\tSmoothness = 0.2,\r\n\t}\r\n\t\r\n\tlocal lib, connections = {}, {}\r\n\tlib.connect = function(name, connection)\r\n\t\tconnections[name .. tostring(math.random(1000000, 9999999))] = connection\r\n\t\treturn connection\r\n\tend\r\n\tlib.disconnect = function(name)\r\n\t\tfor title, connection in pairs(connections) do\r\n\t\t\tif title:find(name) == 1 then\r\n\t\t\t\tconnection:Disconnect()\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\t\r\n\t--// Functions\r\n\tlocal flyPart\r\n\t\r\n\tlocal function flyEnd()\r\n\t\tlib.disconnect(\"fly\")\r\n\t\tif flyPart then\r\n\t\t\t--flyPart:Destroy()\r\n\t\tend\r\n\t\tcharacter:FindFirstChildWhichIsA(\"Humanoid\").PlatformStand = false\r\n\t\tif character and character.Parent and flyPart then\r\n\t\t\tfor _, part in pairs(character:GetDescendants()) do\r\n\t\t\t\tif part:IsA(\"BasePart\") then\r\n\t\t\t\t\tpart.Velocity = Vector3.new()\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\t\r\n\tmodule.flyStart = function(enabled)\r\n\t\tif not enabled then flyEnd() return end\r\n\t\tlocal dir = {w = false, a = false, s = false, d = false}\r\n\t\tlocal cf = Instance.new(\"CFrameValue\")\r\n\t\t\r\n\t\tflyPart = flyPart or Instance.new(\"Part\")\r\n\t\tflyPart.Anchored = true\r\n\t\tpcall(function()\r\n\t\t\tflyPart.CFrame = character.HumanoidRootPart.CFrame\r\n\t\tend)\r\n\t\t\r\n\t\tlib.connect(\"fly\", RunService.Heartbeat:Connect(function()\r\n\t\t\tif not character or not character.Parent or not character:FindFirstChild(\"HumanoidRootPart\") then return end\r\n\t\r\n\t\t\tlocal primaryPart = character.HumanoidRootPart\r\n\t\t\tlocal humanoid = character:FindFirstChildWhichIsA(\"Humanoid\")\r\n\t\t\tlocal speed = module.Options.Speed\r\n\t\t\t\r\n\t\t\tlocal x, y, z = 0, 0, 0\r\n\t\t\tif dir.w then z = -1 * speed end\r\n\t\t\tif dir.a then x = -1 * speed end\r\n\t\t\tif dir.s then z = 1 * speed end\r\n\t\t\tif dir.d then x = 1 * speed end\r\n\t\t\tif dir.q then y = 1 * speed end\r\n\t\t\tif dir.e then y = -1 * speed end\r\n\t\t\t\r\n\t\t\tflyPart.CFrame = CFrame.new(\r\n\t\t\t\tflyPart.CFrame.p,\r\n\t\t\t\t(camera.CFrame * CFrame.new(0, 0, -2048)).p\r\n\t\t\t)\r\n\t\t\t\r\n\t\t\tfor _, part in pairs(character:GetChildren()) do\r\n\t\t\t\tif part:IsA(\"BasePart\") then\r\n\t\t\t\t\tpart.Velocity = Vector3.new()\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tlocal moveDir = CFrame.new(x,y,z)\r\n\t\t\tcf.Value = cf.Value:lerp(moveDir, module.Options.Smoothness)\r\n\t\t\tflyPart.CFrame = flyPart.CFrame:lerp(flyPart.CFrame * cf.Value, module.Options.Smoothness)\r\n\t\t\tprimaryPart.CFrame = flyPart.CFrame\r\n\t\t\thumanoid.PlatformStand = true\r\n\t\tend))\r\n\t\tlib.connect(\"fly\", UserInputService.InputBegan:Connect(function(input, event)\r\n\t\t\tif event then return end\r\n\t\t\tlocal code, codes = input.KeyCode, Enum.KeyCode\r\n\t\t\tif code == codes.W then\r\n\t\t\t\tdir.w = true\r\n\t\t\telseif code == codes.A then\r\n\t\t\t\tdir.a = true\r\n\t\t\telseif code == codes.S then\r\n\t\t\t\tdir.s = true\r\n\t\t\telseif code == codes.D then\r\n\t\t\t\tdir.d = true\r\n\t\t\telseif code == codes.Q then\r\n\t\t\t\tdir.q = true\r\n\t\t\telseif code == codes.E then\r\n\t\t\t\tdir.e = true\r\n\t\t\telseif code == codes.Space then\r\n\t\t\t\tdir.q = true\r\n\t\t\tend\r\n\t\tend))\r\n\t\tlib.connect(\"fly\", UserInputService.InputEnded:Connect(function(input, event)\r\n\t\t\tif event then return end\r\n\t\t\tlocal code, codes = input.KeyCode, Enum.KeyCode\r\n\t\t\tif code == codes.W then\r\n\t\t\t\tdir.w = false\r\n\t\t\telseif code == codes.A then\r\n\t\t\t\tdir.a = false\r\n\t\t\telseif code == codes.S then\r\n\t\t\t\tdir.s = false\r\n\t\t\telseif code == codes.D then\r\n\t\t\t\tdir.d = false\r\n\t\t\telseif code == codes.Q then\r\n\t\t\t\tdir.q = false\r\n\t\t\telseif code == codes.E then\r\n\t\t\t\tdir.e = false\r\n\t\t\telseif code == codes.Space then\r\n\t\t\t\tdir.q = false\r\n\t\t\tend\r\n\t\tend))\r\n\tend\r\n\t\r\n\t--// Events\r\n\tPlayer.CharacterAdded:Connect(function(char)\r\n\t\tcharacter = char\r\n\tend)\r\n\t\r\n\treturn module\r\nend)()\r\nlocal _Freecam = (function()\r\n\t--// Variables\r\n\tlocal RunService = game:GetService(\"RunService\")\r\n\tlocal UserInputService = game:GetService(\"UserInputService\")\r\n\tlocal Players = game:GetService(\"Players\")\r\n\t  local Player = Players.LocalPlayer\r\n\t    local character = Player.Character\r\n\tlocal camera = workspace.CurrentCamera\r\n\t\r\n\tlocal module = {}\r\n\tmodule.Options = {\r\n\t\tSpeed = 5,\r\n\t\tSmoothness = 0.2,\r\n\t}\r\n\t\r\n\tlocal lib, connections = {}, {}\r\n\tlib.connect = function(name, connection)\r\n\t\tconnections[name .. tostring(math.random(1000000, 9999999))] = connection\r\n\t\treturn connection\r\n\tend\r\n\tlib.disconnect = function(name)\r\n\t\tfor title, connection in pairs(connections) do\r\n\t\t\tif title:find(name) == 1 then\r\n\t\t\t\tconnection:Disconnect()\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\t\r\n\t--// Functions\r\n\tlocal flyPart\r\n\t\r\n\tlocal function flyEnd()\r\n\t\tlib.disconnect(\"freecam\")\r\n\t\tcamera.CameraSubject = character\r\n\t\tpcall(function()\r\n\t\t\tcharacter.PrimaryPart.Anchored = false\r\n\t\tend)\r\n\tend\r\n\t\r\n\tmodule.flyStart = function(enabled)\r\n\t\tif not enabled then flyEnd() return end\r\n\t\tlocal dir = {w = false, a = false, s = false, d = false}\r\n\t\tlocal cf = Instance.new(\"CFrameValue\")\r\n\t\tlocal camPart = Instance.new(\"Part\")\r\n\t\tcamPart.Transparency = 1\r\n\t\tcamPart.Anchored = true\r\n\t\tcamPart.CFrame = camera.CFrame\r\n\t\tpcall(function()\r\n\t\t\tcharacter.PrimaryPart.Anchored = true\r\n\t\tend)\r\n\t\t\r\n\t\tlib.connect(\"freecam\", RunService.RenderStepped:Connect(function()\r\n\t\t\tlocal primaryPart = camPart\r\n\t\t\tcamera.CameraSubject = primaryPart\r\n\t\t\t\r\n\t\t\tlocal speed = module.Options.Speed\r\n\t\t\t\r\n\t\t\tlocal x, y, z = 0, 0, 0\r\n\t\t\tif dir.w then z = -1 * speed end\r\n\t\t\tif dir.a then x = -1 * speed end\r\n\t\t\tif dir.s then z = 1 * speed end\r\n\t\t\tif dir.d then x = 1 * speed end\r\n\t\t\tif dir.q then y = 1 * speed end\r\n\t\t\tif dir.e then y = -1 * speed end\r\n\t\t\t\r\n\t\t\tprimaryPart.CFrame = CFrame.new(\r\n\t\t\t\tprimaryPart.CFrame.p,\r\n\t\t\t\t(camera.CFrame * CFrame.new(0, 0, -100)).p\r\n\t\t\t)\r\n\t\t\t\r\n\t\t\tlocal moveDir = CFrame.new(x,y,z)\r\n\t\t\tcf.Value = cf.Value:lerp(moveDir, module.Options.Smoothness)\r\n\t\t\tprimaryPart.CFrame = primaryPart.CFrame:lerp(primaryPart.CFrame * cf.Value, module.Options.Smoothness)\r\n\t\tend))\r\n\t\tlib.connect(\"freecam\", UserInputService.InputBegan:Connect(function(input, event)\r\n\t\t\tif event then return end\r\n\t\t\tlocal code, codes = input.KeyCode, Enum.KeyCode\r\n\t\t\tif code == codes.W then\r\n\t\t\t\tdir.w = true\r\n\t\t\telseif code == codes.A then\r\n\t\t\t\tdir.a = true\r\n\t\t\telseif code == codes.S then\r\n\t\t\t\tdir.s = true\r\n\t\t\telseif code == codes.D then\r\n\t\t\t\tdir.d = true\r\n\t\t\telseif code == codes.Q then\r\n\t\t\t\tdir.q = true\r\n\t\t\telseif code == codes.E then\r\n\t\t\t\tdir.e = true\r\n\t\t\telseif code == codes.Space then\r\n\t\t\t\tdir.q = true\r\n\t\t\tend\r\n\t\tend))\r\n\t\tlib.connect(\"freecam\", UserInputService.InputEnded:Connect(function(input, event)\r\n\t\t\tif event then return end\r\n\t\t\tlocal code, codes = input.KeyCode, Enum.KeyCode\r\n\t\t\tif code == codes.W then\r\n\t\t\t\tdir.w = false\r\n\t\t\telseif code == codes.A then\r\n\t\t\t\tdir.a = false\r\n\t\t\telseif code == codes.S then\r\n\t\t\t\tdir.s = false\r\n\t\t\telseif code == codes.D then\r\n\t\t\t\tdir.d = false\r\n\t\t\telseif code == codes.Q then\r\n\t\t\t\tdir.q = false\r\n\t\t\telseif code == codes.E then\r\n\t\t\t\tdir.e = false\r\n\t\t\telseif code == codes.Space then\r\n\t\t\t\tdir.q = false\r\n\t\t\tend\r\n\t\tend))\r\n\tend\r\n\t\r\n\t--// Events\r\n\tPlayer.CharacterAdded:Connect(function(char)\r\n\t\tcharacter = char\r\n\tend)\r\n\t\r\n\treturn module\r\nend)()\r\nlocal _Rubberbanding = (function()\r\n\t--// Variables\r\n\tlocal RunService = game:GetService(\"RunService\")\r\n\tlocal Players = game:GetService(\"Players\")\r\n\t  local Player = Players.LocalPlayer\r\n\t    local Character = Player.Character\r\n\t\r\n\tlocal module = {}\r\n\tmodule.Options = {\r\n\t\tEnabled = false,\r\n\t\tThreshold = 150,\r\n\t\tUpdateSpeed = 100,\r\n\t}\r\n\t\r\n\tlocal connections = {}\r\n\t\r\n\t--// Functions\r\n\tlocal function getPart(Model)\r\n\t\treturn Model.PrimaryPart or Model:FindFirstChild(\"HumanoidRootPart\") or Model:FindFirstChildWhichIsA(\"Part\")\r\n\tend\r\n\t\r\n\tlocal function connectPart(Part)\r\n\t\tlocal lastPosition = CFrame.new()\r\n\t\tlocal lastVelocity = Vector3.new()\r\n\t\tlocal lastRender = tick()\r\n\t\t\r\n\t\tconnections[#connections+1] = RunService.RenderStepped:Connect(function()\r\n\t\t\tif not module.Options.Enabled then return end\r\n\t\t\t\r\n\t\t\tif Part and (tick() - lastRender >= module.Options.UpdateSpeed / 1000) then\r\n\t\t\t\tif (lastVelocity - Part.Velocity).Magnitude > module.Options.Threshold and Part.Velocity.Magnitude > lastVelocity.Magnitude then\r\n\t\t\t\t\tPart.Velocity = lastVelocity\r\n\t\t\t\t\tPart.CFrame = lastPosition\r\n\t\t\t\tend\r\n\t\t\t\t\r\n\t\t\t\tlastPosition = Part.CFrame\r\n\t\t\t\tlastVelocity = Part.Velocity\r\n\t\t\t\tlastRender = tick()\r\n\t\t\tend\r\n\t\tend)\r\n\tend\r\n\t\r\n\tlocal function onCharacter(char)\r\n\t\tCharacter = char\r\n\t\tfor i, v in pairs(connections) do\r\n\t\t\tv:Disconnect()\r\n\t\t\tconnections[i] = nil\r\n\t\tend\r\n\t\tfor _, part in pairs(char:GetChildren()) do\r\n\t\t\tif part.Name == \"HumanoidRootPart\" then\r\n\t\t\t\tconnectPart(part)\r\n\t\t\tend\r\n\t\tend\r\n\t\tconnections[#connections+1] = Character.ChildAdded:Connect(function(child)\r\n\t\t\tif child.Name == \"HumanoidRootPart\" then\r\n\t\t\t\tconnectPart(child)\r\n\t\t\tend\r\n\t\tend)\r\n\tend\r\n\t\r\n\t\r\n\tmodule.Toggle = function(enabled)\r\n\t\tmodule.Options.Enabled = enabled\r\n\t\tfor i, v in pairs(connections) do\r\n\t\t\tv:Disconnect()\r\n\t\t\tconnections[i] = nil\r\n\t\tend\r\n\t\tif enabled and Character then\r\n\t\t\tonCharacter(Character)\r\n\t\tend\r\n\tend\r\n\t\r\n\t--// Events\r\n\tPlayer.CharacterAdded:Connect(function(char)\r\n\t\tonCharacter(char)\r\n\tend)\r\n\t\r\n\tif Character then\r\n\t\tonCharacter(Character)\r\n\tend\r\n\t\r\n\treturn module\r\n\t\r\nend)()\r\nlocal _AntiTP = (function()\r\n\t--// Variables\r\n\tlocal RunService = game:GetService(\"RunService\")\r\n\tlocal Players = game:GetService(\"Players\")\r\n\t  local Player = Players.LocalPlayer\r\n\t    local Character = Player.Character\r\n\t\r\n\tlocal module = {}\r\n\tmodule.Options = {\r\n\t\tEnabled = false,\r\n\t\tThreshold = 150,\r\n\t\tUpdateSpeed = 100,\r\n\t}\r\n\t\r\n\tlocal connections = {}\r\n\t\r\n\t--// Functions\r\n\tlocal function getPart(Model)\r\n\t\treturn Model.PrimaryPart or Model:FindFirstChild(\"HumanoidRootPart\") or Model:FindFirstChildWhichIsA(\"Part\")\r\n\tend\r\n\t\r\n\tlocal function connectPart(Part)\r\n\t\tlocal lastPosition = Part.CFrame\r\n\t\tlocal lastRender = tick()\r\n\t\t\r\n\t\tconnections[#connections+1] = RunService.RenderStepped:Connect(function()\r\n\t\t\tif not module.Options.Enabled then return end\r\n\t\t\t\r\n\t\t\tif Part and (tick() - lastRender >= module.Options.UpdateSpeed / 1000) then\r\n\t\t\t\tif (lastPosition.p - Part.Position).Magnitude > module.Options.Threshold then\r\n\t\t\t\t\tPart.CFrame = lastPosition\r\n\t\t\t\t\tPart.Velocity = Vector3.new(0, 0, 0)\r\n\t\t\t\tend\r\n\t\t\t\t\r\n\t\t\t\tlastPosition = Part.CFrame\r\n\t\t\t\tlastRender = tick()\r\n\t\t\tend\r\n\t\tend)\r\n\tend\r\n\t\r\n\tlocal function onCharacter(char)\r\n\t\tCharacter = char\r\n\t\tfor i, v in pairs(connections) do\r\n\t\t\tv:Disconnect()\r\n\t\t\tconnections[i] = nil\r\n\t\tend\r\n\t\tfor _, part in pairs(char:GetChildren()) do\r\n\t\t\tif part.Name == \"HumanoidRootPart\" then\r\n\t\t\t\tconnectPart(part)\r\n\t\t\tend\r\n\t\tend\r\n\t\tconnections[#connections+1] = Character.ChildAdded:Connect(function(child)\r\n\t\t\tif child.Name == \"HumanoidRootPart\" then\r\n\t\t\t\tconnectPart(child)\r\n\t\t\tend\r\n\t\tend)\r\n\tend\r\n\t\r\n\tmodule.Toggle = function(enabled)\r\n\t\tmodule.Options.Enabled = enabled\r\n\t\tfor i, v in pairs(connections) do\r\n\t\t\tv:Disconnect()\r\n\t\t\tconnections[i] = nil\r\n\t\tend\r\n\t\tif enabled and Character then\r\n\t\t\tonCharacter(Character)\r\n\t\tend\r\n\tend\r\n\t\r\n\t--// Events\r\n\tPlayer.CharacterAdded:Connect(function(char)\r\n\t\tonCharacter(char)\r\n\tend)\r\n\t\r\n\tif Character then\r\n\t\tonCharacter(Character)\r\n\tend\r\n\t\r\n\treturn module\r\n\t\r\nend)()\r\nlocal _Noclip = (function()\r\n\t--// Variables\r\n\tlocal RunService = game:GetService(\"RunService\")\r\n\tlocal Players = game:GetService(\"Players\")\r\n\t  local Player = Players.LocalPlayer\r\n\t    local Character = Player.Character\r\n\t\r\n\tlocal module = {}\r\n\tmodule.Options = {\r\n\t\tEnabled = false,\r\n\t}\r\n\t\r\n\tlocal connections = {}\r\n\t\r\n\t--// Functions\r\n\tlocal function getPart(Model)\r\n\t\treturn Model.PrimaryPart or Model:FindFirstChild(\"HumanoidRootPart\") or Model:FindFirstChildWhichIsA(\"Part\")\r\n\tend\r\n\t\r\n\tlocal function connectModel(Model)\r\n\t\tconnections[#connections+1] = RunService.Stepped:Connect(function()\r\n\t\t\tif not module.Options.Enabled then return end\r\n\t\t\tfor _, part in pairs(Model:GetDescendants()) do\r\n\t\t\t\tif part:IsA(\"BasePart\") then\r\n\t\t\t\t\tpart.CanCollide = false\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend)\r\n\tend\r\n\t\r\n\tmodule.Toggle = function(enabled)\r\n\t\tmodule.Options.Enabled = enabled\r\n\t\tfor i, v in pairs(connections) do\r\n\t\t\tv:Disconnect()\r\n\t\t\tconnections[i] = nil\r\n\t\tend\r\n\t\tif enabled and Character then\r\n\t\t\tonCharacter(Character)\r\n\t\tend\r\n\tend\r\n\t\r\n\tfunction onCharacter(char)\r\n\t\tfor i, v in pairs(connections) do\r\n\t\t\tv:Disconnect()\r\n\t\t\tconnections[i] = nil\r\n\t\tend\r\n\t\tCharacter = char\r\n\t\tconnectModel(char)\r\n\tend\r\n\t\r\n\t--// Events\r\n\tPlayer.CharacterAdded:Connect(function(char)\r\n\t\tonCharacter(char)\r\n\tend)\r\n\t\r\n\tif Character then\r\n\t\tonCharacter(Character)\r\n\tend\r\n\t\r\n\treturn module\r\n\t\r\nend)()\r\n\r\n--// Variables\r\nlocal RunService = game:GetService(\"RunService\")\r\nlocal HttpService = game:GetService(\"HttpService\")\r\nlocal UserInputService = game:GetService(\"UserInputService\")\r\nlocal Players = game:GetService(\"Players\")\r\n  local Player = Players.LocalPlayer\r\n    local Mouse = Player:GetMouse()\r\n\r\nlocal gui = GUIData[1]\r\nlocal saveData = GUIData[2]\r\nlocal screenGui = GUIData[3]\r\n\r\nlocal screenscale = 250\r\nlocal opacity = 1\r\nlocal backcolor = Color3.new()\r\n\r\n--// Saving\r\nlocal readfile = readfile or function() end\r\npcall(function()\r\n\tlocal JSONData = readfile(\"OpenGui.txt\")\r\n\tif JSONData then\r\n\t\tlocal LUAData = HttpService:JSONDecode(JSONData)\r\n\t\tsaveData.Options = LUAData.Options\r\n\t\tsaveData.Hotkeys = LUAData.Hotkeys\r\n\t\tprint(\"Save Data found\")\r\n\telse\r\n\t\tprint(\"Save Data not found\")\r\n\tend\r\nend)\r\n\r\n\r\n--// UI Creation\r\n\r\n--// Render Frame\r\nlocal Render = gui:create(\"Container\", {\r\n\tName = \"Render\",\r\n})--|\r\n\tlocal OpenGui = Render.self:create(\"Toggle\", {\r\n\t\tName = \"OpenGui\",\r\n\t\tDefault = true,\r\n\t\tHotkey = tostring(Enum.KeyCode.RightControl),\r\n\t\tHint = \"The navigation GUI\",\r\n\t\tCallback = function(enabled)\r\n\t\t\tfor _, frame in pairs(screenGui:GetChildren()) do\r\n\t\t\t\tif frame:IsA(\"Frame\") then\r\n\t\t\t\t\tframe.Visible = enabled\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\t\tscreenGui.Modal.Visible = enabled\r\n\t\t\tscreenGui.Hint.Visible = false\r\n\t\tend,\r\n\t})--|\r\n\t\tlocal Opacity = OpenGui.self:create(\"Number\", {\r\n\t\t\tName = \"Opacity\",\r\n\t\t\tMin = 0,\r\n\t\t\tMax = 1,\r\n\t\t\tRound = 0.01,\r\n\t\t\tDefault = 0.75,\r\n\t\t\tHint = \"Transparency of the navigation GUI\",\r\n\t\t\tCallback = function(alpha)\r\n\t\t\t\topacity = 1 - alpha\r\n\t\t\t\tfor _, frame in pairs(screenGui:GetChildren()) do\r\n\t\t\t\t\tif frame:IsA(\"Frame\") then\r\n\t\t\t\t\t\tframe.BackgroundTransparency = 1 - alpha\r\n\t\t\t\t\t\tframe.OptionsFrame.BackgroundTransparency = 1 - alpha\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal Width = OpenGui.self:create(\"Number\", {\r\n\t\t\tName = \"Width\",\r\n\t\t\tMin = 200,\r\n\t\t\tMax = 300,\r\n\t\t\tRound = 1,\r\n\t\t\tDefault = 250,\r\n\t\t\tHint = \"Width of the navigation GUI\",\r\n\t\t\tCallback = function(scale)\r\n\t\t\t\tscreenscale = scale\r\n\t\t\t\tfor _, frame in pairs(screenGui:GetChildren()) do\r\n\t\t\t\t\tif frame:IsA(\"Frame\") then\r\n\t\t\t\t\t\tframe.Size = UDim2.new(0, scale, 0, frame.Size.Y.Offset)\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal Color = OpenGui.self:create(\"Color\", {\r\n\t\t\tName = \"Background Color\",\r\n\t\t\tDefault = Color3.fromRGB(40, 40, 40),\r\n\t\t\tHint = \"Background color of the navigation GUI\",\r\n\t\t\tCallback = function(color)\r\n\t\t\t\tbackcolor = color\r\n\t\t\t\tfor _, frame in pairs(screenGui:GetChildren()) do\r\n\t\t\t\t\tif frame:IsA(\"Frame\") then\r\n\t\t\t\t\t\tframe.BackgroundColor3 = color\r\n\t\t\t\t\t\tframe.OptionsFrame.BackgroundColor3 = color\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend,\r\n\t\t})\r\n\tlocal ESP = Render.self:create(\"Toggle\", {\r\n\t\tName = \"ESP\",\r\n\t\tDefault = false,\r\n\t\tHint = \"Toggle player ESP\",\r\n\t\tCallback = function(enabled)\r\n\t\t\t_ESP.Options.Enabled = enabled\r\n\t\t\tif enabled then\r\n\t\t\t\t_ESP:Enable()\r\n\t\t\t\t_ESP2D:Enable()\r\n\t\t\telse\r\n\t\t\t\t_ESP:Disable()\r\n\t\t\t\t_ESP2D:Disable()\r\n\t\t\tend\r\n\t\t\t_ESP2D:ReloadCharacters()\r\n\t\tend,\r\n\t})--|\r\n\t\tlocal ESPColor = ESP.self:create(\"Color\", {\r\n\t\t\tName = \"ESP Color\",\r\n\t\t\tDefault = Color3.new(1, 1, 1),\r\n\t\t\tHint = \"Color of the player ESP\",\r\n\t\t\tCallback = function(color)\r\n\t\t\t\t_ESP.Options.Color = color\r\n\t\t\t\t_ESP2D.Options.Color = color\r\n\t\t\t\t_ESP2D:ReloadCharacters()\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal ESPShowTeam = ESP.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Show Team\",\r\n\t\t\tDefault = false,\r\n\t\t\tHint = \"Players on your team are highlighted\",\r\n\t\t\tCallback = function(enabled)\r\n\t\t\t\t_ESP.Options.ShowTeam = enabled\r\n\t\t\t\t_ESP2D.Options.ShowTeam = enabled\r\n\t\t\t\t_ESP2D:ReloadCharacters()\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal ESPShowSelf = ESP.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Show Self\",\r\n\t\t\tDefault = false,\r\n\t\t\tHint = \"Include yourself in the ESP\",\r\n\t\t\tCallback = function(enabled)\r\n\t\t\t\t_ESP.Options.ShowSelf = enabled\r\n\t\t\t\t_ESP2D.Options.ShowSelf = enabled\r\n\t\t\t\t_ESP2D:ReloadCharacters()\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal ESPTeamColor = ESP.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Team Color\",\r\n\t\t\tDefault = false,\r\n\t\t\tHint = \"The ESP's color corresponds to the player's team\",\r\n\t\t\tCallback = function(enabled)\r\n\t\t\t\t_ESP.Options.TeamColor = enabled\r\n\t\t\t\t_ESP2D.Options.TeamColor = enabled\r\n\t\t\t\t_ESP2D:ReloadCharacters()\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal ESPShowDescendants = ESP.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Show Descendants\",\r\n\t\t\tDefault = false,\r\n\t\t\tHint = \"Highlight items like accessories\",\r\n\t\t\tCallback = function(enabled)\r\n\t\t\t\t_ESP.Options.ShowDescendants = enabled\r\n\t\t\t\t_ESP2D.Options.ShowDescendants = enabled\r\n\t\t\t\t_ESP2D:ReloadCharacters()\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal ESPDirection = ESP.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Show Direction\",\r\n\t\t\tDefault = false,\r\n\t\t\tHint = \"Show where the player is facing\",\r\n\t\t\tCallback = function(enabled)\r\n\t\t\t\t_ESP.Options.Arrow = enabled\r\n\t\t\t\t_ESP2D.Options.Arrow = enabled\r\n\t\t\t\t_ESP2D:ReloadCharacters()\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal ESPOpacity = ESP.self:create(\"Number\", {\r\n\t\t\tName = \"Opacity\",\r\n\t\t\tDefault = 0.5,\r\n\t\t\tMin = 0,\r\n\t\t\tMax = 1,\r\n\t\t\tRound = 0.01,\r\n\t\t\tHint = \"Visibility of the ESP\",\r\n\t\t\tCallback = function(opacity)\r\n\t\t\t\t_ESP.Options.Opacity = opacity\r\n\t\t\t\t_ESP2D.Options.Opacity = opacity\r\n\t\t\t\t_ESP2D:ReloadCharacters()\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal ESPMaxDistance = ESP.self:create(\"Number\", {\r\n\t\t\tName = \"Max Distance\",\r\n\t\t\tDefault = 500,\r\n\t\t\tMin = 32,\r\n\t\t\tMax = 2048,\r\n\t\t\tRound = 0.5,\r\n\t\t\tHint = \"The maximum distance of the ESP\",\r\n\t\t\tCallback = function(distance)\r\n\t\t\t\t_ESP.Options.MaxDistance = distance\r\n\t\t\t\t_ESP2D.Options.MaxDistance = distance\r\n\t\t\t\t_ESP2D:ReloadCharacters()\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal ESPMode = ESP.self:create(\"Mode\", {\r\n\t\t\tName = \"ESP Mode\",\r\n\t\t\tDefault = 1,\r\n\t\t\tModes = {\"Shader\", \"Default\", \"Box\", \"Square\"},\r\n\t\t\tHint = \"The type of ESP used\",\r\n\t\t\tCallback = function(mode)\r\n\t\t\t\t_ESP.Options.Mode = mode\r\n\t\t\t\t_ESP2D.Options.Mode = mode\r\n\t\t\t\t_ESP:ReloadCharacters()\r\n\t\t\t\t_ESP2D:ReloadCharacters()\r\n\t\t\tend,\r\n\t\t})\r\n\tlocal Chams = Render.self:create(\"Toggle\", {\r\n\t\tName = \"Chams\",\r\n\t\tDefault = false,\r\n\t\tHint = \"Render players through walls\",\r\n\t\tCallback = function(enabled)\r\n\t\t\t_Chams.Options.Enabled = enabled\r\n\t\t\tif enabled then\r\n\t\t\t\t_Chams:Enable()\r\n\t\t\telse\r\n\t\t\t\t_Chams:Disable()\r\n\t\t\tend\r\n\t\tend,\r\n\t})--|\r\n\t\tlocal ChamsColor = Chams.self:create(\"Color\", {\r\n\t\t\tName = \"Chams Color\",\r\n\t\t\tDefault = Color3.new(1, 1, 1),\r\n\t\t\tHint = \"Color of the player chams\",\r\n\t\t\tCallback = function(color)\r\n\t\t\t\t_Chams.Options.Color = color\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal ChamsShowTeam = Chams.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Show Team\",\r\n\t\t\tDefault = false,\r\n\t\t\tHint = \"Include your teammates\",\r\n\t\t\tCallback = function(enabled)\r\n\t\t\t\t_Chams.Options.ShowTeam = enabled\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal ChamsShowSelf = Chams.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Show Self\",\r\n\t\t\tDefault = false,\r\n\t\t\tHint = \"Include yourself\",\r\n\t\t\tCallback = function(enabled)\r\n\t\t\t\t_Chams.Options.ShowSelf = enabled\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal ChamsTeamColor = Chams.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Team Color\",\r\n\t\t\tDefault = false,\r\n\t\t\tHint = \"The chams color corresponds to the player's team\",\r\n\t\t\tCallback = function(enabled)\r\n\t\t\t\t_Chams.Options.TeamColor = enabled\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal ChamsShowDescendants = Chams.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Show Descendants\",\r\n\t\t\tDefault = false,\r\n\t\t\tHint = \"Highlight items like accessories\",\r\n\t\t\tCallback = function(enabled)\r\n\t\t\t\t_Chams.Options.ShowDescendants = enabled\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal ChamsMode = Chams.self:create(\"Mode\", {\r\n\t\t\tName = \"Chams Mode\",\r\n\t\t\tDefault = 1,\r\n\t\t\tModes = {\"Opaque\", \"Shader\"},\r\n\t\t\tHint = \"The type of chams used\",\r\n\t\t\tCallback = function(mode)\r\n\t\t\t\t_Chams.Options.Mode = mode\r\n\t\t\t\t_Chams:ReloadCharacters()\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal ChamsOpacity = Chams.self:create(\"Number\", {\r\n\t\t\tName = \"Opacity\",\r\n\t\t\tDefault = 0.5,\r\n\t\t\tMin = 0,\r\n\t\t\tMax = 1,\r\n\t\t\tRound = 0.01,\r\n\t\t\tHint = \"Visibility of the chams\",\r\n\t\t\tCallback = function(opacity)\r\n\t\t\t\t_Chams.Options.Opacity = opacity\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal ChamsMaxDistance = Chams.self:create(\"Number\", {\r\n\t\t\tName = \"Max Distance\",\r\n\t\t\tDefault = 500,\r\n\t\t\tMin = 32,\r\n\t\t\tMax = 2048,\r\n\t\t\tRound = 0.5,\r\n\t\t\tHint = \"The chams' maximum distance\",\r\n\t\t\tCallback = function(distance)\r\n\t\t\t\t_Chams.Options.MaxDistance = distance\r\n\t\t\tend,\r\n\t\t})\r\n\tlocal Tracers = Render.self:create(\"Toggle\", {\r\n\t\tName = \"Tracers\",\r\n\t\tDefault = false,\r\n\t\tHint = \"Draw lines to other players\",\r\n\t\tCallback = function(enabled)\r\n\t\t\t_Tracers.Options.Enabled = enabled\r\n\t\t\tif enabled then\r\n\t\t\t\t_Tracers:Enable()\r\n\t\t\telse\r\n\t\t\t\t_Tracers:Disable()\r\n\t\t\tend\r\n\t\tend,\r\n\t})--|\r\n\t\tlocal TracersColor = Tracers.self:create(\"Color\", {\r\n\t\t\tName = \"Tracers Color\",\r\n\t\t\tDefault = Color3.new(1, 1, 1),\r\n\t\t\tHint = \"Color of the tracers\",\r\n\t\t\tCallback = function(color)\r\n\t\t\t\t_Tracers.Options.Color = color\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal TracersShowTeam = Tracers.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Show Team\",\r\n\t\t\tDefault = false,\r\n\t\t\tHint = \"Include your teammates\",\r\n\t\t\tCallback = function(enabled)\r\n\t\t\t\t_Tracers.Options.ShowTeam = enabled\r\n\t\t\t\t_Tracers:ReloadCharacters()\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal TracersShowSelf = Tracers.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Show Self\",\r\n\t\t\tDefault = false,\r\n\t\t\tHint = \"Include yourself\",\r\n\t\t\tCallback = function(enabled)\r\n\t\t\t\t_Tracers.Options.ShowSelf = enabled\r\n\t\t\t\t_Tracers:ReloadCharacters()\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal TracersTeamColor = Tracers.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Team Color\",\r\n\t\t\tDefault = false,\r\n\t\t\tHint = \"Tracer colors correspond to the player's team\",\r\n\t\t\tCallback = function(enabled)\r\n\t\t\t\t_Tracers.Options.TeamColor = enabled\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal TracersOpacity = Tracers.self:create(\"Number\", {\r\n\t\t\tName = \"Opacity\",\r\n\t\t\tDefault = 1,\r\n\t\t\tMin = 0,\r\n\t\t\tMax = 1,\r\n\t\t\tRound = 0.01,\r\n\t\t\tHint = \"Visibility of the tracers\",\r\n\t\t\tCallback = function(opacity)\r\n\t\t\t\t_Tracers.Options.Opacity = opacity\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal TracersMaxDistance = Tracers.self:create(\"Number\", {\r\n\t\t\tName = \"Max Distance\",\r\n\t\t\tDefault = 500,\r\n\t\t\tMin = 32,\r\n\t\t\tMax = 2048,\r\n\t\t\tRound = 0.5,\r\n\t\t\tHint = \"The maximum distance in which tracers are drawn\",\r\n\t\t\tCallback = function(distance)\r\n\t\t\t\t_Tracers.Options.MaxDistance = distance\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal TracersWidth = Tracers.self:create(\"Number\", {\r\n\t\t\tName = \"Width\",\r\n\t\t\tDefault = 2,\r\n\t\t\tMin = 1,\r\n\t\t\tMax = 10,\r\n\t\t\tRound = 1,\r\n\t\t\tHint = \"Width of the tracers\",\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_Tracers.Options.Radius = value\r\n\t\t\tend,\r\n\t\t})\r\n\tlocal Freecam = Render.self:create(\"Toggle\", {\r\n\t\tName = \"Freecam\",\r\n\t\tDefault = false,\r\n\t\tHint = \"Move your camera freely\",\r\n\t\tCallback = function(enabled)\r\n\t\t\t_Freecam.flyStart(enabled)\r\n\t\tend,\r\n\t})--|\r\n\t\tlocal FreecamSpeed = Freecam.self:create(\"Number\", {\r\n\t\t\tName = \"Speed\",\r\n\t\t\tDefault = 5,\r\n\t\t\tMin = 0.1,\r\n\t\t\tMax = 100,\r\n\t\t\tRound = 0.1,\r\n\t\t\tHint = \"Camera speed\",\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_Freecam.Options.Speed = value\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal FreecamSpeed = Freecam.self:create(\"Number\", {\r\n\t\t\tName = \"Smoothness\",\r\n\t\t\tDefault = 0.2,\r\n\t\t\tMin = 0.1,\r\n\t\t\tMax = 1,\r\n\t\t\tRound = 0.01,\r\n\t\t\tHint = \"Smoothness of the interpolation\",\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_Freecam.Options.Smoothness = value\r\n\t\t\tend,\r\n\t\t})\r\n\r\n--// Combat Frame\r\nlocal Combat = gui:create(\"Container\", {\r\n\tName = \"Combat\",\r\n})--|\r\n\tlocal Aimbot = Combat.self:create(\"Toggle\", {\r\n\t\tName = \"Aimbot\",\r\n\t\tDefault = false,\r\n\t\tHint = \"Automatically point to other players, hotkey recommended\",\r\n\t\tCallback = function(enabled)\r\n\t\t\t_Aimbot.Options.Enabled = enabled\r\n\t\tend,\r\n\t})--]\r\n\t\tlocal AimbotEasing = Aimbot.self:create(\"Number\", {\r\n\t\t\tName = \"Easing\",\r\n\t\t\tDefault = 2,\r\n\t\t\tMin = 1.3,\r\n\t\t\tMax = 32,\r\n\t\t\tRound = 0.1,\r\n\t\t\tHint = \"Smoothness of the aimbot\",\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_Aimbot.Options.Easing = value\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal AimbotLegit = Aimbot.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Legit\",\r\n\t\t\tHint = \"Give the aimbot a maximum speed, looks more legit\",\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_Aimbot.Options.Legit = value\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal AimbotMaxDistance = Aimbot.self:create(\"Number\", {\r\n\t\t\tName = \"Max Distance\",\r\n\t\t\tDefault = 500,\r\n\t\t\tMin = 32,\r\n\t\t\tMax = 2048,\r\n\t\t\tRound = 1,\r\n\t\t\tHint = \"The aimbot's maximum distance\",\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_Aimbot.Options.MaxDistance = value\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal AimbotMode = Aimbot.self:create(\"Mode\", {\r\n\t\t\tName = \"Aim Target\",\r\n\t\t\tModes = {\r\n\t\t\t\t\"Head\",\r\n\t\t\t\t\"Torso\",\r\n\t\t\t},\r\n\t\t\tHint = \"Where the aimbot will aim\",\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_Aimbot.Options.AimPart = value\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal AimbotShowTeam = Aimbot.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Target Team\",\r\n\t\t\tHint = \"Target your teammates\",\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_Aimbot.Options.ShowTeams = value\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal AimbotOnscreen = Aimbot.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Target On-Screen\",\r\n\t\t\tHint = \"Target players only in front of you\",\r\n\t\t\tDefault = false,\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_Aimbot.Options.Onscreen = value\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal AimbotVisible = Aimbot.self:create(\"Checkbox\", {\r\n\t\t\tName = \"Target Visible\",\r\n\t\t\tHint = \"Ignore players obstructed from view\",\r\n\t\t\tDefault = false,\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_Aimbot.Options.Visible = value\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal AimbotMode = Aimbot.self:create(\"Mode\", {\r\n\t\t\tName = \"Aimbot Mode\",\r\n\t\t\tHint = \"Change who the aimbot targets\",\r\n\t\t\tDefault = 1,\r\n\t\t\tModes = {\r\n\t\t\t\t\"Nearest\",\r\n\t\t\t\t\"Snap\",\r\n\t\t\t},\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_Aimbot.Options.Mode = value\r\n\t\t\tend,\r\n\t\t})--]\r\n\t\t\tlocal AimbotModeRadius = AimbotMode.self:create(\"Number\", {\r\n\t\t\t\tName = \"Snap Radius\",\r\n\t\t\t\tDefault = 250,\r\n\t\t\t\tMin = 32,\r\n\t\t\t\tMax = 1024,\r\n\t\t\t\tRound = 1,\r\n\t\t\t\tHint = \"The detection radius of the aimbot mode 'Snap'\",\r\n\t\t\t\tCallback = function(value)\r\n\t\t\t\t\t_Aimbot.Options.Radius = value\r\n\t\t\t\tend,\r\n\t\t\t})\r\n\r\n--// Movement\r\nlocal Movement = gui:create(\"Container\", {\r\n\tName = \"Movement\",\r\n})--|\r\n\tlocal Flight = Movement.self:create(\"Toggle\", {\r\n\t\tName = \"Flight\",\r\n\t\tDefault = false,\r\n\t\tHint = \"Toggle player flight (uses CFrame)\",\r\n\t\tCallback = function(enabled)\r\n\t\t\t_Flight.flyStart(enabled)\r\n\t\tend,\r\n\t})--|\r\n\t\tlocal FlightSpeed = Flight.self:create(\"Number\", {\r\n\t\t\tName = \"Speed\",\r\n\t\t\tDefault = 5,\r\n\t\t\tMin = 0.1,\r\n\t\t\tMax = 100,\r\n\t\t\tRound = 0.1,\r\n\t\t\tHint = \"Flight speed\",\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_Flight.Options.Speed = value\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal FlightSpeed = Flight.self:create(\"Number\", {\r\n\t\t\tName = \"Smoothness\",\r\n\t\t\tDefault = 0.2,\r\n\t\t\tMin = 0.1,\r\n\t\t\tMax = 1,\r\n\t\t\tRound = 0.01,\r\n\t\t\tHint = \"Smoothness of the interpolation\",\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_Flight.Options.Smoothness = value\r\n\t\t\tend,\r\n\t\t})\r\n\r\n--// Player\r\nlocal PlayerTab = gui:create(\"Container\", {\r\n\tName = \"Player\",\r\n})--|\r\n\tlocal Rubberbanding = PlayerTab.self:create(\"Toggle\", {\r\n\t\tName = \"Rubberbanding\",\r\n\t\tDefault = false,\r\n\t\tHint = \"Get set back if your velocity changes above the threshold\",\r\n\t\tCallback = function(enabled)\r\n\t\t\t_Rubberbanding.Toggle(enabled)\r\n\t\tend,\r\n\t})--|\r\n\t\tlocal RubberbandingThreshold = Rubberbanding.self:create(\"Number\", {\r\n\t\t\tName = \"Threshold\",\r\n\t\t\tDefault = false,\r\n\t\t\tMin = 50,\r\n\t\t\tMax = 1000,\r\n\t\t\tDefault = 150,\r\n\t\t\tRound = 1,\r\n\t\t\tHint = \"Threshold for magnitude check\",\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_Rubberbanding.Options.Threshold = value\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal RubberbandingSpeed = Rubberbanding.self:create(\"Number\", {\r\n\t\t\tName = \"Update Speed\",\r\n\t\t\tDefault = false,\r\n\t\t\tMin = 1,\r\n\t\t\tMax = 500,\r\n\t\t\tDefault = 100,\r\n\t\t\tRound = 1,\r\n\t\t\tHint = \"How often it checks the velocity in ms\",\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_Rubberbanding.Options.UpdateSpeed = value\r\n\t\t\tend,\r\n\t\t})\r\n\tlocal AntiTP = PlayerTab.self:create(\"Toggle\", {\r\n\t\tName = \"Anti TP\",\r\n\t\tDefault = false,\r\n\t\tHint = \"Prevent teleporting large distances\",\r\n\t\tCallback = function(enabled)\r\n\t\t\t_AntiTP.Toggle(enabled)\r\n\t\tend,\r\n\t})--|\r\n\t\tlocal AntiTPThreshold = AntiTP.self:create(\"Number\", {\r\n\t\t\tName = \"Threshold\",\r\n\t\t\tMin = 1,\r\n\t\t\tMax = 1000,\r\n\t\t\tDefault = 150,\r\n\t\t\tRound = 1,\r\n\t\t\tHint = \"Maximum distance\",\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_AntiTP.Options.Threshold = value\r\n\t\t\tend,\r\n\t\t})\r\n\t\tlocal AntiTPSpeed = AntiTP.self:create(\"Number\", {\r\n\t\t\tName = \"Update Speed\",\r\n\t\t\tMin = 1,\r\n\t\t\tMax = 500,\r\n\t\t\tDefault = 100,\r\n\t\t\tRound = 1,\r\n\t\t\tHint = \"How often it checks the position in ms\",\r\n\t\t\tCallback = function(value)\r\n\t\t\t\t_AntiTP.Options.UpdateSpeed = value\r\n\t\t\tend,\r\n\t\t})\r\n\tlocal Noclip = PlayerTab.self:create(\"Toggle\", {\r\n\t\tName = \"No Collision\",\r\n\t\tDefault = false,\r\n\t\tHint = \"Ignore object collision\",\r\n\t\tCallback = function(enabled)\r\n\t\t\t_Noclip.Toggle(enabled)\r\n\t\tend,\r\n\t})\r\n\r\n--// UI Functionality\r\nRunService.RenderStepped:Connect(function()\r\n\tfor _, frame in pairs(screenGui:GetChildren()) do\r\n\t\tif frame:IsA(\"Frame\") then\r\n\t\t\tframe.Size = UDim2.new(0, screenscale, 0, frame.Size.Y.Offset)\r\n\t\t\t\r\n\t\t\tframe.BackgroundTransparency = opacity\r\n\t\t\tframe.OptionsFrame.BackgroundTransparency = opacity\r\n\t\t\t\r\n\t\t\tframe.BackgroundColor3 = backcolor\r\n\t\t\tframe.OptionsFrame.BackgroundColor3 = backcolor\r\n\t\tend\r\n\tend\r\nend)\r\n"